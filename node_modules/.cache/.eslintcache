[{"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\index.js":"1","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\App.js":"2","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\HeaderSection.js":"3","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\login.js":"4","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\panCard\\panCard.js":"5","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\aadharCard\\AadharCard.js":"6","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\voterId\\voterId.js":"7","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\adminArea.js":"8","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\voterId\\voterIdData.js":"9","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\panCard\\panCardData.js":"10","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\aadharCard\\aadharData.js":"11","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\aadharCard\\AadharCardForm.js":"12","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\panCard\\panCardForm.js":"13","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\voterId\\voterIdForm.js":"14","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\dashboard.js":"15","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\approvedList.js":"16","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\viewList.js":"17","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\rejectedList.js":"18","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\hooks\\useStorage.js":"19","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\firebase.js":"20","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\firebase\\addData.js":"21","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\thankYou.js":"22","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\listItem.js":"23","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\firebase\\dbOperations.js":"24","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\wpAdmin.js":"25"},{"size":219,"mtime":1618332531830,"results":"26","hashOfConfig":"27"},{"size":1616,"mtime":1619271096405,"results":"28","hashOfConfig":"27"},{"size":377,"mtime":1619008429821,"results":"29","hashOfConfig":"27"},{"size":6817,"mtime":1619272062893,"results":"30","hashOfConfig":"27"},{"size":1363,"mtime":1618491199576,"results":"31","hashOfConfig":"27"},{"size":1442,"mtime":1618490975906,"results":"32","hashOfConfig":"27"},{"size":1353,"mtime":1618492473813,"results":"33","hashOfConfig":"27"},{"size":2831,"mtime":1619268853384,"results":"34","hashOfConfig":"27"},{"size":12341,"mtime":1618475351503,"results":"35","hashOfConfig":"27"},{"size":12337,"mtime":1618474934762,"results":"36","hashOfConfig":"27"},{"size":13600,"mtime":1618475454096,"results":"37","hashOfConfig":"27"},{"size":12952,"mtime":1619156548714,"results":"38","hashOfConfig":"27"},{"size":37140,"mtime":1619110327299,"results":"39","hashOfConfig":"27"},{"size":22551,"mtime":1619156618525,"results":"40","hashOfConfig":"27"},{"size":3007,"mtime":1619270806237,"results":"41","hashOfConfig":"27"},{"size":4033,"mtime":1619247501966,"results":"42","hashOfConfig":"27"},{"size":4624,"mtime":1619268634875,"results":"43","hashOfConfig":"27"},{"size":4066,"mtime":1619267024658,"results":"44","hashOfConfig":"27"},{"size":2167,"mtime":1618906437960,"results":"45","hashOfConfig":"27"},{"size":675,"mtime":1618815588683,"results":"46","hashOfConfig":"27"},{"size":2094,"mtime":1619091207456,"results":"47","hashOfConfig":"27"},{"size":601,"mtime":1619077624964,"results":"48","hashOfConfig":"27"},{"size":6719,"mtime":1619268162037,"results":"49","hashOfConfig":"27"},{"size":995,"mtime":1619175109238,"results":"50","hashOfConfig":"27"},{"size":2443,"mtime":1619277675899,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"137wljb",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":4,"warningCount":3,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\index.js",[],["116","117"],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\App.js",["118"],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\HeaderSection.js",[],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\login.js",["119"],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\panCard\\panCard.js",[],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\aadharCard\\AadharCard.js",[],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\voterId\\voterId.js",[],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\adminArea.js",["120"],"import React, { useState,useEffect } from 'react'\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UnorderedListOutlined,\r\n  LogoutOutlined,\r\n  DashboardOutlined,\r\n  CheckCircleOutlined,\r\n  ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport '../../custom.css'\r\nimport Dashboard from './dashboard'\r\nimport ViewList from './viewList'\r\nimport ApprovedList from './approvedList'\r\nimport RejectedList from './rejectedList'\r\n\r\nconst {  Sider, Content } = Layout;\r\n\r\nfunction AdminArea({ adminType ,adminDbName}) {\r\n\r\n  const [showSlider, setshowSlider] = useState(true);\r\n  const [showContent, setshowContent] = useState(<Dashboard adminType={ adminType }/>);\r\n\r\n  useEffect(() => {\r\n    console.log(\"adminType\",adminType);\r\n    console.log(\"adminDbName\",adminDbName);\r\n    setshowContent(<Dashboard adminType={ adminType } adminDbName={adminDbName}/>);\r\n  }, [adminType])\r\n\r\n  const toggleSlider = () => {\r\n    setshowSlider(!showSlider);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Sider trigger={null} collapsible collapsed={showSlider} style={{ marginTop: '4rem' }}>\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['0']} >\r\n          <Menu.Item  key=\"0\"  onClick={toggleSlider}>\r\n            {React.createElement(showSlider ? (MenuUnfoldOutlined) : MenuFoldOutlined, {\r\n              className: 'trigger',\r\n\r\n            })}<span>Menu </span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\" icon={<DashboardOutlined />}\r\n          onClick={(e) =>setshowContent(<Dashboard adminType={ adminType }  adminDbName={adminDbName}/>)}\r\n          >\r\n           Dashboard\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<UnorderedListOutlined />}\r\n          onClick={(e) =>setshowContent(<ViewList adminType={ adminType } adminDbName={adminDbName}/>)}\r\n          >\r\n            View All \r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<CheckCircleOutlined />}\r\n          onClick={(e) =>setshowContent(<ApprovedList adminType={ adminType } adminDbName={adminDbName}/>)}\r\n          >\r\n            Approved\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\" icon={<ExclamationCircleOutlined />}\r\n          onClick={(e) =>setshowContent(<RejectedList adminType={ adminType } adminDbName={adminDbName}/>)}\r\n          >\r\n            Rejected\r\n          </Menu.Item>\r\n\r\n          <Menu.Item style={{bottom:'0px'}} key=\"5\" icon={<LogoutOutlined />}>\r\n            Logout\r\n          </Menu.Item>\r\n        </Menu>\r\n          \r\n      </Sider>\r\n      <Content\r\n        className=\"site-layout-background\"\r\n        style={{\r\n          marginTop: '3rem',\r\n          padding: '1rem',\r\n          minHeight: '100vh',\r\n        }}>\r\n        <h1 style={{textAlign:'center'}}>{showContent}</h1>        \r\n      </Content>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminArea\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\voterId\\voterIdData.js",[],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\panCard\\panCardData.js",[],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\aadharCard\\aadharData.js",[],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\aadharCard\\AadharCardForm.js",["121","122","123","124"],"import React from 'react'\r\n// , { useState }\r\nimport {\r\n    Form,\r\n    Select,\r\n    InputNumber,\r\n\r\n    Radio,\r\n    message,\r\n    Button,\r\n    Upload,\r\n    Spin,\r\n    Input,\r\n    DatePicker\r\n} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n// import moment from 'moment';\r\nimport '../../custom.css'\r\nimport country from 'country_state_district';\r\nimport { uploadData, uploadPhoto } from '../../firebase/addData'\r\n// import {useState as useStateRef} from 'react-usestateref'\r\nimport useState from 'react-usestateref'\r\nimport ThankYou from '../thankYou'\r\n\r\nconst states = country.getStatesByCountryId(1);\r\nconst dateFormat = 'YYYY/MM/DD';\r\n\r\nconst fireBaseTableName = \"aadharCardData\"\r\n\r\nconst types = ['image/png', 'image/jpeg', 'image/jpg']\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 3 },\r\n    wrapperCol: { span: 16 },\r\n    labelAlign: 'left'\r\n};\r\n\r\n\r\nfunction AadharCardForm() {\r\n    const allFiles = [\"photo\", \"sign\", \"identityProof\"]\r\n    const [aadharNoInput, setaadharNoInput] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    // const [filePhoto, setFilePhoto] = useState(null);\r\n    // const [fileSign, setFileSign] = useState(null);\r\n    // const [fileIdProof, setFileIdProof] = useState(null);\r\n\r\n    var [filePhoto, setFilePhoto, filePhotoRef] = useState(null);\r\n    var [fileSign, setFileSign, fileSignRef] = useState(null);\r\n    var [fileIdProof, setFileIdProof, fileIdProofRef] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [formFilled, setFormFilled, formFilledRef] = useState(false);\r\n\r\n    const toggleAadharNoInput = (e) => {\r\n\r\n        if (e.target.value === \"update\") {\r\n            setaadharNoInput(true);\r\n        }\r\n        else {\r\n            setaadharNoInput(false);\r\n        }\r\n\r\n    }\r\n\r\n    const normFile = (e) => {\r\n\r\n        if (e.fileList.length && types.includes(e.file.type)) {\r\n            console.log(\"file is ok\");\r\n            setError(false);\r\n        }\r\n        else {\r\n            console.log('file is not ok');\r\n\r\n            setError(true);\r\n            message.error('Please upload file in jpg/png/jpeg format.');\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n        }, 0);\r\n    };\r\n\r\n    function onChange(value) {\r\n        console.log('changed', value);\r\n    }\r\n\r\n    const uploadAllImages = async (refId) => {\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            \r\n            Promise.all([uploadPhoto(filePhotoRef.current, refId, allFiles[0],fireBaseTableName),\r\n            uploadPhoto(fileSignRef.current, refId, allFiles[1],fireBaseTableName),\r\n            uploadPhoto(fileIdProofRef.current, refId, allFiles[2],fireBaseTableName)])\r\n                .then(() => {\r\n                    resolve(\"done aaaaaaa\")\r\n                    \r\n                })\r\n        })\r\n    }\r\n    const onFinish = (values) => {\r\n\r\n        setLoading(true);\r\n        console.log('Success:', values);\r\n        // console.log(\"photo\",values.identityProof[0])\r\n\r\n        setFilePhoto(values.photo[0])\r\n        setFileSign(values.sign[0])\r\n        setFileIdProof(values.identityProof[0])\r\n\r\n        console.log(\"filePhoto: \", filePhotoRef.current)\r\n        console.log(\"fileSign: \", fileSignRef.current)\r\n        console.log(\"fileIdProof: \", fileIdProofRef.current)\r\n\r\n        delete values.identityProof;\r\n        delete values.sign;\r\n        delete values.photo;\r\n        values.dob = values.dob._d\r\n        if (!values.aadharNumber) {\r\n            values.aadharNo = null;\r\n        }\r\n\r\n        values.status = \"submitted\"\r\n\r\n        uploadData(values,fireBaseTableName).then((ref) => {\r\n            console.log(\"got rref now uploading images\");\r\n            uploadAllImages(ref.id).then((res) => {\r\n                console.log(res)\r\n                // setLoading(false);\r\n            }).catch(e => console.log(\"error\", e))\r\n\r\n        }).catch(e => console.log(\"error\", e))\r\n            .finally(() => { setLoading(false); setFormFilled(true);});\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {formFilled  ? <ThankYou /> : <>\r\n                <Spin size=\"large\" spinning={loading}>\r\n                    <h1>AadharCard Form</h1>\r\n                    <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onFinish}\r\n                        initialValues={{\r\n                            'input-number': 3,\r\n                            rate: 3.5,\r\n                        }}\r\n                    >\r\n\r\n                        <Form.Item name=\"nationality\" label=\"Nationality\" rules={[{ required: true, message: 'Please select nationality' }]} style={{ textAlign: \"left\" }}>\r\n                            <Radio.Group  >\r\n                                <Radio value=\"Indian\">Indian Resident</Radio>\r\n                                <Radio value=\"Nri\">Non Resident Indian</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"enrolmentType\" label=\"Enrolment Type\" style={{ textAlign: \"left\" }} rules={[{ required: true, message: 'Please select enrolment type' }]}>\r\n                            <Radio.Group>\r\n                                <Radio value=\"new\" onChange={(e) => toggleAadharNoInput(e)}>New Enrolment</Radio>\r\n                                <Radio value=\"update\" onChange={(e) => toggleAadharNoInput(e)}>Update Request</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n\r\n                        {aadharNoInput ? (\r\n                            <>\r\n                                <Form.Item label=\"Aadhar No\" labelCol={{ span: 3 }}\r\n                                    style={{ textAlign: \"left\" }} >\r\n                                    <Form.Item name=\"aadharNumber\"\r\n\r\n                                        rules={[{ required: true, message: 'Please enter Aadhar Number!' }]}>\r\n                                        <InputNumber style={{ width: 'auto' }} minlength=\"12\" maxLength=\"12\" className=\"aadhar-number\" onChange={onChange} />\r\n                                    </Form.Item>\r\n\r\n                                </Form.Item>\r\n                                {/* form comple */}\r\n                            </>\r\n                        ) : (<></>)}\r\n                        \r\n                        <Form.Item name=\"fullName\" style={{ textAlign: \"left\" }} label=\"Full Name\" rules={[{ required: true, message: 'Please enter Name!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"relationOf\" style={{ textAlign: \"left\" }} label=\"C/O\" rules={[{ required: true, message: 'Please enter C/O!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"addressLineOne\" style={{ textAlign: \"left\" }} label=\"House No / Apt\" rules={[{ required: true, message: 'Please enter House no / Bridg / Apt' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"addressLineTwo\" style={{ textAlign: \"left\" }} label=\"Street / road / lane\" rules={[{ required: true, message: 'Please enter Street / road / lane' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item name=\"landmark\" style={{ textAlign: \"left\" }} label=\"Landmark \" rules={[{ required: true, message: 'Please enter landmark' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n\r\n\r\n                        <Form.Item name=\"locality\" style={{ textAlign: \"left\" }} label=\"Area/locality/sector \" rules={[{ required: true, message: 'Please enter Area/locality/sector' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"settlement\" style={{ textAlign: \"left\" }} label=\"Village / town / city \" rules={[{ required: true, message: 'Please enter landmark' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"postoffice\" style={{ textAlign: \"left\" }} label=\"PostOffice \" rules={[{ required: true, message: 'Please enter postOffice' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"district\" style={{ textAlign: \"left\" }} label=\"District \" rules={[{ required: true, message: 'Please enter district' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"state\"\r\n                            label=\"State\"\r\n                            hasFeedback\r\n                            rules={[{ required: true, message: 'Please select your state!' }]}\r\n                            style={{ textAlign: \"left\" }}\r\n                        >\r\n                            <Select placeholder=\"Please select a state\">\r\n                                {\r\n                                    states.map((state) => (\r\n                                        <Option key={state.id} value={state.name}>{state.name}</Option>\r\n                                    ))\r\n                                }\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Pincode\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Item name=\"pincode\" rules={[{ required: true, message: 'Please select your pincode!' }]} >\r\n                                <InputNumber style={{ width: 100 }} />\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"dob\" style={{ textAlign: \"left\" }} label=\"Date Of Birth \" rules={[{ required: true, message: 'Please enter Date Of Birth!' }]}>\r\n                            <DatePicker format={dateFormat} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"photo\"\r\n                            label=\"Upload Your Photo\"\r\n                            valuePropName=\"photoList\"\r\n                            getValueFromEvent={normFile}\r\n                            extra=\"\"\r\n                            style={{ textAlign: \"left\" }}\r\n\r\n                            rules={[{ required: true, message: 'Please upload your photo!' }]}\r\n                        >\r\n                            {/*  action=\"/upload.do\" */}\r\n                            <Upload name=\"logo\" listType=\"picture\" customRequest={dummyRequest} maxCount={1}>\r\n                                <Button icon={<UploadOutlined />}  >Click to upload</Button>\r\n                            </Upload>\r\n\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            name=\"sign\"\r\n                            label=\"Upload Your Sign\"\r\n                            valuePropName=\"signList\"\r\n                            getValueFromEvent={normFile}\r\n                            extra=\"\"\r\n                            style={{ textAlign: \"left\" }}\r\n\r\n                            rules={[{ required: true, message: 'Please upload your photo!' }]}\r\n                        >\r\n                            <Upload name=\"logo\" listType=\"picture\" customRequest={dummyRequest} maxCount={1}>\r\n                                <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            name=\"identityProof\"\r\n                            label=\"Identity Proof\"\r\n                            valuePropName=\"identity-proof-list\"\r\n                            getValueFromEvent={normFile}\r\n                            extra=\"\"\r\n                            style={{ textAlign: \"left\" }}\r\n\r\n                            rules={[{ required: true, message: 'Please upload your photo!' }]}\r\n                        >\r\n                            <Upload name=\"logo\" listType=\"picture\" customRequest={dummyRequest} maxCount={1}>\r\n                                <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n\r\n\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 5 }} style={{ textAlign: \"center\" }} >\r\n                            <Button type=\"primary\" htmlType=\"submit\" disabled={error}>\r\n                                Submit\r\n                    </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Spin>\r\n\r\n\r\n            </>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AadharCardForm\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\panCard\\panCardForm.js",["125","126","127","128","129"],"import React from 'react'\r\nimport {\r\n    Form,\r\n    Select,\r\n    InputNumber,\r\n    Row,\r\n    Checkbox,\r\n    Col,\r\n    Radio,\r\n    message,\r\n    Button,\r\n    Upload,\r\n    Spin,\r\n    Input,\r\n    DatePicker\r\n} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n// import moment from 'moment';\r\nimport '../../custom.css'\r\nimport country from 'country_state_district';\r\nimport { uploadData, uploadPhoto } from '../../firebase/addData'\r\nimport useState from 'react-usestateref'\r\nimport ThankYou from '../thankYou'\r\n\r\n\r\nconst states = country.getStatesByCountryId(1);\r\nconst dateFormat = 'YYYY/MM/DD';\r\n\r\nconst fireBaseTableName = \"panCardData\"\r\nconst types = ['image/png', 'image/jpeg', 'image/jpg']\r\n\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 16 },\r\n    labelAlign: 'left'\r\n};\r\n\r\n\r\n\r\nfunction PanCardForm() {\r\n\r\n    const allFiles = [\"photo\", \"sign\", \"aadharCard\"]\r\n    const [error, setError] = useState(false);\r\n\r\n    const [disableFatherName, setDisableFatherName] = useState(false)\r\n    const [otherName, setOtherName, otherNameRef] = useState(false);\r\n    const [individual, setIndividual] = useState(false);\r\n    const [motherName, setMotherName] = useState(false);\r\n    const [motherNameOnPan, setMotherNameOnPan] = useState(false);\r\n    const [fatherNameOnPan, setFatherNameOnPan] = useState(false);\r\n    const [haveAadhar, setHaveAadhar] = useState(false);\r\n\r\n\r\n    var [filePhoto, setFilePhoto, filePhotoRef] = useState(null);\r\n    var [fileSign, setFileSign, fileSignRef] = useState(null);\r\n    var [fileAadhar, setFileAadhar, fileAadharRef] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [formFilled, setFormFilled, filledRef] = useState(false);\r\n\r\n\r\n    let notHaveAadhar = !haveAadhar;\r\n\r\n    function onChange(value) {\r\n        console.log('changed', value);\r\n    }\r\n\r\n\r\n    const normFile = (e) => {\r\n        if (e.fileList.length && types.includes(e.file.type)) {\r\n            console.log(\"file is ok\");\r\n            setError(false);\r\n        }\r\n        else {\r\n            console.log('file is not ok');\r\n\r\n            setError(true);\r\n            message.error('Please upload file in jpg/png/jpeg format.');\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n        }, 0);\r\n    };\r\n\r\n\r\n\r\n    const uploadAllImages = async (refId) => {\r\n        console.log(\"uploading image\");\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([uploadPhoto(filePhotoRef.current, refId, allFiles[0], fireBaseTableName),\r\n            uploadPhoto(fileSignRef.current, refId, allFiles[1], fireBaseTableName),\r\n            uploadPhoto(fileAadharRef.current, refId, allFiles[2], fireBaseTableName)])\r\n                .then(() => {\r\n                    resolve(\"done aaaaaaa\")\r\n                    setFormFilled(true);\r\n                })\r\n        })\r\n    }\r\n\r\n\r\n    const onFinish = (values) => {\r\n        setLoading(true);\r\n        console.log('Success:', values);\r\n        // console.log(\"photo\",values.identityProof[0])\r\n\r\n        Object.keys(values).forEach(function (key, index) {\r\n            if (this[key] == undefined) this[key] = null;\r\n        }, values);\r\n        console.log('After: ', values);\r\n        setFilePhoto(values.aadharCardPhoto[0])\r\n        setFileSign(values.passportPhoto[0])\r\n        setFileAadhar(values.sign[0])\r\n\r\n        console.log(\"filePhoto: \", filePhotoRef.current)\r\n        console.log(\"fileSign: \", fileSignRef.current)\r\n        console.log(\"fileIdProof: \", fileAadharRef.current)\r\n        delete values.aadharCardPhoto;\r\n        delete values.passportPhoto;\r\n        delete values.sign;\r\n        values.dob = values.dob._d\r\n\r\n        values.status = \"submitted\"\r\n        console.log(\"values\", values)\r\n        uploadData(values, fireBaseTableName).then((ref) => {\r\n            console.log(\"got rref now uploading images\");\r\n            uploadAllImages(ref.id).then((res) => {\r\n                console.log(res)\r\n                // setLoading(false);\r\n            }).catch(e => console.log(\"error occured\", e))\r\n\r\n        }).catch(e => console.log(\"error\", e))\r\n            .finally(() => { setLoading(false); setFormFilled(true); });\r\n\r\n    };\r\n\r\n    // const onFinishFailed = (errorInfo) => {\r\n    //     console.log('Failed:', errorInfo);\r\n    // };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {formFilled ? <ThankYou /> : <>\r\n                <Spin size=\"large\" spinning={loading}>\r\n                    <h1>PanCard Form</h1>\r\n                    <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onFinish}\r\n                        initialValues={{\r\n                            'input-number': 3,\r\n                            rate: 3.5,\r\n                        }}\r\n                    >\r\n                        <Form.Item name=\"applicantStatus\" label=\"Status of Applicant\" rules={[{ required: true, message: 'Please select applicantStatus' }]} style={{ textAlign: \"left\" }}>\r\n                            <Radio.Group>\r\n                                <Radio value=\"individual\" onClick={() => setIndividual(true)}>Individual</Radio>\r\n                                <Radio value=\"trusts\">Trusts</Radio>\r\n\r\n                                <Radio value=\"huf\">Hindu Undivided family</Radio>\r\n                                <Radio value=\"bodyOfIndividual\">Body of individual</Radio>\r\n\r\n                                <Radio value=\"company\">Compny</Radio>\r\n                                <Radio value=\"localAuthority\">Local authority</Radio>\r\n\r\n                                <Radio value=\"partership\">Partership firm</Radio>\r\n                                <Radio value=\"judicialPerson\">Artificial judicial person</Radio>\r\n\r\n                                <Radio value=\"govt\">Goveronment</Radio>\r\n                                <Radio value=\"association\">Association Of person</Radio>\r\n\r\n                                <Radio value=\"llp\">Limited liablity partnership</Radio>\r\n\r\n\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                        <hr />\r\n                        <h3 style={{ textAlign: 'left' }}>Full Name (Full expanded name to be mentioned as appearing in proof of identity/date of birth/address documents: initials are not permitted)</h3>\r\n\r\n                        <Form.Item name=\"nameTitle\" label=\"Title\" rules={[{ required: true, message: 'Please select title' }]} style={{ textAlign: \"left\" }}>\r\n                            <Radio.Group>\r\n                                <Radio value=\"shri\">Shri</Radio>\r\n                                <Radio value=\"smt\">Smt.</Radio>\r\n                                <Radio value=\"kumari\">Kumari</Radio>\r\n                                <Radio value=\"ms\">M/s</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"lastname\" style={{ textAlign: \"left\" }} label=\"Last Name\" rules={[{ required: true, message: 'Please enter Last Name!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"firstname\" style={{ textAlign: \"left\" }} label=\"First Name\" rules={[{ required: true, message: 'Please enter First Name!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"middlename\" style={{ textAlign: \"left\" }} label=\"Middle Name\" rules={[{ required: true, message: 'Please enter Middle Name!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <hr />\r\n                        <h3 style={{ textAlign: 'left' }} >Abbreviations of the above name, as you would like it, to be printed on the PAN card</h3>\r\n                        <Form.Item name=\"pancardName\" style={{ textAlign: \"left\" }} label=\"Name \" rules={[{ required: true, message: 'Please enter  Name!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <hr />\r\n                        {/* rules={[{ required: true, message: 'Please select appropriate' }]} */}\r\n                        <Form.Item name=\"otherName\" label=\"Known by other name\" rules={[{ required: otherNameRef.current, message: 'Please enter  Name!' }]} style={{ textAlign: \"left\" }}>\r\n                            <Radio.Group>\r\n                                <Radio value=\"yes\" onClick={() => {\r\n                                    setOtherName(true);\r\n                                    console.log(\"otherNameRef\", otherNameRef.current, \"otherName\", otherName);\r\n                                }}>Yes</Radio>\r\n                                <Radio value=\"no\" onClick={() => {\r\n                                    setOtherName(false)\r\n                                    console.log(\"otherNameRef\", otherNameRef.current, \"otherName\", otherName);\r\n                                }}>No</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                        {otherName ? (\r\n                            <>\r\n                                <Form.Item name=\"otherNameTitle\" label=\"Title\" rules={[{ required: { otherName }, message: 'Please select title' }]} style={{ textAlign: \"left\" }}>\r\n                                    <Radio.Group>\r\n                                        <Radio value=\"shri\">Shri</Radio>\r\n                                        <Radio value=\"smt\">Smt.</Radio>\r\n                                        <Radio value=\"kumari\">Kumari</Radio>\r\n                                        <Radio value=\"ms\">M/s</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"otherLastname\" style={{ textAlign: \"left\" }} label=\"Last Name\" rules={[{ required: { otherName }, message: 'Please enter Last Name!' }]}>\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"otherFirstname\" style={{ textAlign: \"left\" }} label=\"First Name\" rules={[{ required: { otherName }, message: 'Please enter First Name!' }]}>\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"otherMiddlename\" style={{ textAlign: \"left\" }} label=\"Middle Name\" rules={[{ required: { otherName }, message: 'Please enter Middle Name!' }]}>\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </>\r\n                        ) : <></>}\r\n\r\n                        <hr />\r\n                        {individual ? (<>\r\n                            <Form.Item name=\"gender\" label=\"Gender\" style={{ textAlign: \"left\" }} rules={[{ required: true, message: 'Please select gender' }]}>\r\n                                <Radio.Group>\r\n                                    <Radio value=\"male\" >Male</Radio>\r\n                                    <Radio value=\"female\">Female</Radio>\r\n                                    <Radio value=\"tansgender\">Transgender</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                        </>) :\r\n                            (<></>)}\r\n\r\n\r\n                        <hr />\r\n\r\n\r\n                        <h4 style={{ textAlign: 'left' }}>Date of Birth</h4>\r\n                        <p style={{ textAlign: 'left' }}>Incorporation/Agreement/Partnership or  Trust Deed / Formation of Body of individuals or Association of Persons</p>\r\n                        <Form.Item name=\"dob\" style={{ textAlign: \"left\" }} label=\"Date Of Birth \" rules={[{ required: true, message: 'Please enter Date Of Birth!' }]}>\r\n                            <DatePicker format={dateFormat} />\r\n                        </Form.Item>\r\n\r\n                        <hr />\r\n                        {\r\n                            individual ? (<>\r\n                                <h3 style={{ textAlign: 'left' }}>Details of Parents (applicable only for individual applicants)</h3>\r\n                                <p style={{ textAlign: 'left' }}>\r\n                                    Whether mother is a single parent and you wish to apply for PAN by furnishing the name of your mother only?\r\n                        </p>\r\n                                <Form.Item name=\"singleParent\" label=\"Tick Applicable\" rules={[{ required: true, message: 'Please select applicable' }]} style={{ textAlign: \"left\" }}>\r\n                                    <Radio.Group>\r\n                                        <Radio value=\"yes\" onClick={() => {\r\n                                            setMotherName(true)\r\n                                            setDisableFatherName(true)\r\n                                        }\r\n                                        }>Yes</Radio>\r\n                                        <Radio value=\"no\" onClick={() => {\r\n                                            setMotherName(false)\r\n                                            setDisableFatherName(false)\r\n                                        }}>No</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"parentNameOnPan\" label=\"Parent Name On PanCard\" rules={[{ required: true, message: 'Please select applicable' }]} style={{ textAlign: \"left\" }}>\r\n                                    <Radio.Group>\r\n                                        <Radio value=\"motherNname\"\r\n                                            onClick={() => {\r\n                                                setMotherNameOnPan(true)\r\n                                                setFatherNameOnPan(false)\r\n                                            }}>Mother's Name</Radio>\r\n                                        <Radio value=\"fatherName\"\r\n                                            onClick={() => {\r\n                                                setMotherNameOnPan(false)\r\n                                                setFatherNameOnPan(true)\r\n                                            }}\r\n                                            disabled={disableFatherName}\r\n                                        >Father's Name</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                {(motherName || motherNameOnPan) ? (\r\n                                    <>\r\n                                        <Form.Item name=\"motherLastname\" style={{ textAlign: \"left\" }} label=\"Mother's Last Name\" rules={[{ required: true, message: 'Please enter Last Name!' }]}>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item name=\"motherFirstname\" style={{ textAlign: \"left\" }} label=\"Mother's First Name\" rules={[{ required: true, message: 'Please enter First Name!' }]}>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item name=\"motherMiddlename\" style={{ textAlign: \"left\" }} label=\"Mother's Middle Name\" rules={[{ required: true, message: 'Please enter Middle Name!' }]}>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </>\r\n                                ) : (fatherNameOnPan ? (<>\r\n                                    <Form.Item name=\"fatherLastname\" style={{ textAlign: \"left\" }} label=\"Father's Last Name\" rules={[{ required: true, message: 'Please enter Last Name!' }]}>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"fatherFirstname\" style={{ textAlign: \"left\" }} label=\"Father's First Name\" rules={[{ required: true, message: 'Please enter First Name!' }]}>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"fatherMiddlename\" style={{ textAlign: \"left\" }} label=\"Father's Middle Name\" rules={[{ required: true, message: 'Please enter Middle Name!' }]}>\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </>) :\r\n                                    (<></>)\r\n\r\n\r\n                                )}\r\n\r\n                            </>) : <></>\r\n                        }\r\n                        <hr />\r\n                        <h3 style={{ textAlign: 'left' }}>Address</h3>\r\n                        <h4>Residence Address</h4>\r\n                        <Input.Group name=\"residentAddress\" label=\"Residence Address\" rules={[{ required: true, message: 'Please enter address' }]} style={{ textAlign: \"left\" }}>\r\n                            <Form.Item name=\"addressLineOne\" style={{ textAlign: \"left\" }} label=\"Flat / Room / Door / Block No.\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"addressLineTwo\" style={{ textAlign: \"left\" }} label=\"Name of Premises / Building / Village\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"addressLineThree\" style={{ textAlign: \"left\" }} label=\"Road / Street / Lane/Post Office\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"addressLineFour\" style={{ textAlign: \"left\" }} label=\"Area / Locality / Taluka/ Sub- Division\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"city\" style={{ textAlign: \"left\" }} label=\"Town / City / District\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"state\"\r\n                                label=\"State\"\r\n                                hasFeedback\r\n                                rules={[{ required: true, message: 'Please select your state!' }]}\r\n                                style={{ textAlign: \"left\" }}\r\n                            >\r\n                                <Select placeholder=\"Please select a state\">\r\n                                    {\r\n                                        states.map((state) => (\r\n                                            <Option key={state.id} value={state.name}>{state.name}</Option>\r\n                                        ))\r\n                                    }\r\n\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Pincode\" style={{ textAlign: \"left\" }}>\r\n                                <Form.Item name=\"pincode\" rules={[{ required: true, message: 'Please select your pincode!' }]} >\r\n                                    <InputNumber style={{ width: 100 }} />\r\n                                </Form.Item>\r\n                            </Form.Item>\r\n                            <Form.Item name=\"Country\" style={{ textAlign: \"left\" }} label=\"Country\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                        </Input.Group>\r\n\r\n                        <h4>Office Address</h4>\r\n                        <Input.Group name=\"officeAddress\" label=\"Residence Address\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Item name=\"officeAddressL0\" style={{ textAlign: \"left\" }} label=\"Office Name\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"officeAddressL1\" style={{ textAlign: \"left\" }} label=\"Flat / Room / Door / Block No.\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"officeAddressL2\" style={{ textAlign: \"left\" }} label=\"Name of Premises / Building / Village\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"officeAddressL3\" style={{ textAlign: \"left\" }} label=\"Road / Street / Lane/Post Office\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"officeAddressL4\" style={{ textAlign: \"left\" }} label=\"Area / Locality / Taluka/ Sub- Division\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"officeCity\" style={{ textAlign: \"left\" }} label=\"Town / City / District\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"officeState\"\r\n                                label=\"State\"\r\n                                hasFeedback\r\n                                rules={[{ required: true, message: 'Please select your state!' }]}\r\n                                style={{ textAlign: \"left\" }}\r\n                            >\r\n                                <Select placeholder=\"Please select a state\">\r\n                                    {\r\n                                        states.map((state) => (\r\n                                            <Option key={state.id} value={state.name}>{state.name}</Option>\r\n                                        ))\r\n                                    }\r\n\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"officePincode\" style={{ textAlign: \"left\" }}>\r\n                                <Form.Item name=\"pincode\" rules={[{ required: true, message: 'Please select your pincode!' }]} >\r\n                                    <InputNumber style={{ width: 100 }} />\r\n                                </Form.Item>\r\n                            </Form.Item>\r\n                            <Form.Item name=\"Country\" style={{ textAlign: \"left\" }} label=\"Country\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                        </Input.Group>\r\n                        <Form.Item name=\"communicationAddress\" label=\"Address Of communication\" rules={[{ required: true, message: 'Please select appropriate' }]} style={{ textAlign: \"left\" }}>\r\n                            <Radio.Group>\r\n                                <Radio value=\"Office\">Office</Radio>\r\n                                <Radio value=\"Residance\">Residance</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                        <hr />\r\n                        <h3 style={{ textAlign: 'left' }} >Telephone Number & Email ID details</h3>\r\n                        <Form.Item name=\"email\" style={{ textAlign: \"left\" }} label=\"Email\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                            <Input type=\"email\" />\r\n                        </Form.Item>\r\n                        {/* rules={[{ required: true, message: 'Please enter detail!' }]} */}\r\n                        <Form.Item name=\"mobileNo\" label=\"Contact No\" >\r\n\r\n                            <InputNumber style={{ width: 120 }} maxlength=\"10\" />\r\n\r\n                        </Form.Item>\r\n                        {!individual ? (\r\n                            <>\r\n                                <Form.Item label=\"Registration No\" style={{ textAlign: \"left\" }}>\r\n                                    <Form.Item name=\"registrationNo\" rules={[{ required: true, message: 'Please select your Registration!' }]} >\r\n                                        <InputNumber style={{ width: 'auto' }} />\r\n                                    </Form.Item>\r\n                                </Form.Item>\r\n                            </>\r\n                        ) : <></>}\r\n                        <hr />\r\n                        <h3 style={{ textAlign: 'left' }} >\r\n                            In case of a person, who is required to quote Aadhaar number or the Enrolment ID of Aadhaar application form as per section 139 AA\r\n                </h3>\r\n                        {/* rules={[{ required: true, message: 'Please select title' }]}  */}\r\n                        <Form.Item name=\"haveAadhar\" label=\"Aadhar Card alloted?\" style={{ textAlign: \"left\" }}>\r\n                            <Radio.Group>\r\n                                <Radio value=\"yes\" onClick={() => setHaveAadhar(true)}>Yes</Radio>\r\n                                <Radio value=\"no\" onClick={() => setHaveAadhar(false)}>No</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                        {haveAadhar ? (\r\n                            <>\r\n                                <Form.Item label=\"Aadhar No\" labelCol={{ span: 4 }}\r\n                                    style={{ textAlign: \"left\" }}>\r\n                                    <Form.Item name=\"aadharNumber\"\r\n\r\n                                        rules={[{ required: { haveAadhar }, message: 'Please enter Aadhar Number!' }]}>\r\n                                        <InputNumber style={{ width: 'auto' }} maxlength=\"12\" className=\"aadhar-number\" onChange={onChange} />\r\n                                    </Form.Item>\r\n\r\n                                </Form.Item>\r\n                            </>\r\n                        ) : <>\r\n                            <Form.Item label=\"Aadhar Enrolment ID:\" labelCol={{ span: 6 }}\r\n                                style={{ textAlign: \"left\" }} >\r\n                                <Form.Item name=\"enrlId\"\r\n\r\n                                    rules={[{ required: { notHaveAadhar }, message: 'Please enter Aadhar Enrolment Number!' }]}>\r\n                                    <InputNumber style={{ width: 200 }} maxlength=\"28\" className=\"aadhar-number\" onChange={onChange} />\r\n                                </Form.Item>\r\n\r\n                            </Form.Item>\r\n                        </>}\r\n\r\n                        <h4>Name as per Aadhar id or Enrollment application</h4>\r\n                        <Form.Item name=\"nameAsAadhar\" style={{ textAlign: \"left\" }} label=\"Name\" rules={[{ required: true, message: 'Please enter Name!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <hr />\r\n                        <h3 style={{ textAlign: 'left' }}>Sources of Income</h3>\r\n                        <Form.Item style={{ textAlign: 'center' }}>\r\n                            <Checkbox.Group style={{ width: '100%' }} onChange={onChange}>\r\n                                <Row>\r\n                                    <Col >\r\n                                        <Checkbox value=\"Salary\">Salary</Checkbox>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Checkbox value=\"incomeFromBussiness\">Income from Business / Profession</Checkbox>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Checkbox value=\"incomeFromProperty\">Income from House property</Checkbox>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Checkbox value=\"capitalGains\">Capital Gains</Checkbox>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Checkbox value=\"otherSources\">Income from Other sources</Checkbox>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Checkbox value=\"noIncome\">No income</Checkbox>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Checkbox.Group>\r\n                            <Form.Item label=\"Bussiness/ proffesion code:\" labelCol={{ span: 6 }}\r\n                                style={{ textAlign: \"left\" }} >\r\n                                <Form.Item name=\"proffesionCode\">\r\n                                    <InputNumber style={{ width: 200 }} maxlength=\"3\" className=\"aadhar-number\" onChange={onChange} />\r\n                                </Form.Item>\r\n\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n                        <hr />\r\n                        <h3 style={{ textAlign: 'left' }}>\r\n                            Full name, address of the Representative Assessee, who is assessible under the Income Tax Act in respect of the person, whose particulars have\r\n                            been given in the column 1-13.\r\n                </h3>\r\n                        <Input.Group name=\"representativeDetails\" >\r\n                            <Form.Item name=\"representativeFullName\">\r\n                                <Form.Item name=\"representativeNameTitle\" label=\"Title\" style={{ textAlign: \"left\" }}>\r\n                                    <Radio.Group>\r\n                                        <Radio value=\"shri\">Shri</Radio>\r\n                                        <Radio value=\"smt\">Smt.</Radio>\r\n                                        <Radio value=\"kumari\">Kumari</Radio>\r\n                                        <Radio value=\"ms\">M/s</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"representativeLastname\" style={{ textAlign: \"left\" }} label=\"Last Name\">\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"representativeFirstname\" style={{ textAlign: \"left\" }} label=\"First Name\">\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"representativeMiddlename\" style={{ textAlign: \"left\" }} label=\"Middle Name\">\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </Form.Item>\r\n                            <Input.Group name=\"representativeAddress\" label=\"Address\" style={{ textAlign: \"left\" }}>\r\n                                <Form.Item name=\"representativeAddressL1\" style={{ textAlign: \"left\" }} label=\"Flat / Room / Door / Block No.\" >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"representativeAddressL2\" style={{ textAlign: \"left\" }} label=\"Name of Premises / Building / Village\" >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"representativeAddressL3\" style={{ textAlign: \"left\" }} label=\"Road / Street / Lane/Post Office\" >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"representativeAddressL4\" style={{ textAlign: \"left\" }} label=\"Area / Locality / Taluka/ Sub- Division\" >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"representativeCity\" style={{ textAlign: \"left\" }} label=\"Town / City / District\" >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"representativeState\"\r\n                                    label=\"State\"\r\n                                    hasFeedback\r\n                                    style={{ textAlign: \"left\" }}\r\n                                >\r\n                                    <Select placeholder=\"Please select a state\">\r\n                                        {\r\n                                            states.map((state) => (\r\n                                                <Option key={state.id} value={state.name}>{state.name}</Option>\r\n                                            ))\r\n                                        }\r\n\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Pincode\" style={{ textAlign: \"left\" }}>\r\n                                    <Form.Item name=\"representativePincode\">\r\n                                        <InputNumber style={{ width: 100 }} />\r\n                                    </Form.Item>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"representativeCountry\" style={{ textAlign: \"left\" }} label=\"Country\">\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </Input.Group>\r\n                        </Input.Group>\r\n                        <hr />\r\n                        <Form.Item name=\"place\" style={{ textAlign: \"left\" }} label=\"Place\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"sign\"\r\n                            label=\"Upload Your Sign\"\r\n                            valuePropName=\"signList\"\r\n                            getValueFromEvent={normFile}\r\n                            extra=\"\"\r\n                            style={{ textAlign: \"left\" }}\r\n                            rules={[{ required: true, message: 'Please upload your photo!' }]}\r\n                        >\r\n                            <Upload name=\"logo\" listType=\"picture\" customRequest={dummyRequest} >\r\n                                <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"aadharCardPhoto\"\r\n                            label=\"Upload Your AAdharCard photo\"\r\n                            valuePropName=\"aadhar-card-photo\"\r\n                            getValueFromEvent={normFile}\r\n                            extra=\"\"\r\n                            style={{ textAlign: \"left\" }}\r\n                            rules={[{ required: true, message: 'Please upload your aadharcard  photo!' }]}\r\n                        >\r\n                            <Upload name=\"logo\" listType=\"picture\" customRequest={dummyRequest} >\r\n                                <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"passportPhoto\"\r\n                            label=\"Upload Your Passport size photo\"\r\n                            valuePropName=\"passport-size-photo\"\r\n                            getValueFromEvent={normFile}\r\n                            extra=\"\"\r\n                            style={{ textAlign: \"left\" }}\r\n                            rules={[{ required: true, message: 'Please upload your Passport size  photo!' }]}\r\n                        >\r\n                            <Upload name=\"logo\" listType=\"picture\" customRequest={dummyRequest} >\r\n                                <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 5 }} style={{ textAlign: \"center\" }} >\r\n                            <Button type=\"primary\" htmlType=\"submit\" disabled={error} >\r\n                                Submit\r\n                    </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Spin>\r\n            </>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PanCardForm\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\voterId\\voterIdForm.js",["130","131","132","133"],"import React from 'react'\r\n// , { useState }\r\nimport {\r\n    Form,\r\n    Select,\r\n    InputNumber,\r\n    Row,\r\n    Radio,\r\n    Spin,\r\n    message,\r\n    Col,\r\n    Button,\r\n    Upload,\r\n    Checkbox,\r\n    Input,\r\n    DatePicker\r\n} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n// import moment from 'moment';\r\nimport '../../custom.css'\r\nimport country from 'country_state_district';\r\nimport { uploadData, uploadPhoto } from '../../firebase/addData'\r\n// import {useState as useStateRef} from 'react-usestateref'\r\nimport useState from 'react-usestateref'\r\nimport ThankYou from '../thankYou'\r\n\r\n\r\nconst states = country.getStatesByCountryId(1);\r\nconst dateFormat = 'YYYY/MM/DD';\r\n\r\nconst fireBaseTableName = \"voterIdData\"\r\nconst types = ['image/png', 'image/jpeg', 'image/jpg']\r\n\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 16 },\r\n    labelAlign: 'left'\r\n};\r\n\r\nfunction VoterIdForm() {\r\n    const [haveEPiC, setHaveEpic] = useState(false);\r\n    const [shifting, setShifting] = useState(false)\r\n\r\n    const allFiles = [\"photo\", \"sign\", \"aadharCard\"]\r\n    const [error, setError] = useState(false);\r\n\r\n\r\n    var [filePhoto, setFilePhoto, filePhotoRef] = useState(null);\r\n    var [fileSign, setFileSign, fileSignRef] = useState(null);\r\n    var [fileAadhar, setFileAadhar, fileAadharRef] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [formFilled, setFormFilled, filledRef] = useState(false);\r\n\r\n    const normFile = (e) => {\r\n        if (e.fileList.length && types.includes(e.file.type)) {\r\n            console.log(\"file is ok\");\r\n            setError(false);\r\n        }\r\n        else {\r\n            console.log('file is not ok');\r\n\r\n            setError(true);\r\n            message.error('Please upload file in jpg/png/jpeg format.');\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n\r\n    function onChange(value) {\r\n        console.log('changed', value);\r\n    }\r\n\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n        }, 0);\r\n    };\r\n\r\n\r\n\r\n    const uploadAllImages = async (refId) => {\r\n        console.log(\"uploading image\");\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([uploadPhoto(filePhotoRef.current, refId, allFiles[0], fireBaseTableName),\r\n            uploadPhoto(fileSignRef.current, refId, allFiles[1], fireBaseTableName),\r\n            uploadPhoto(fileAadharRef.current, refId, allFiles[2], fireBaseTableName)])\r\n                .then(() => {\r\n                    resolve(\"done aaaaaaa\")\r\n                    setFormFilled(true);\r\n                })\r\n        })\r\n    }\r\n\r\n\r\n    const onFinish = (values) => {\r\n        setLoading(true);\r\n        console.log('Success:', values);\r\n        // console.log(\"photo\",values.identityProof[0])\r\n\r\n        setFilePhoto(values.aadharCardPhoto[0])\r\n        setFileSign(values.passportPhoto[0])\r\n        setFileAadhar(values.sign[0])\r\n\r\n        console.log(\"filePhoto: \", filePhotoRef.current)\r\n        console.log(\"fileSign: \", fileSignRef.current)\r\n        console.log(\"fileIdProof: \", fileAadharRef.current)\r\n\r\n        delete values.aadharCardPhoto;\r\n        delete values.passportPhoto;\r\n        delete values.sign;\r\n        values.dob = values.dob._d\r\n        // values.disablity = values.disablity[0]\r\n        values.haveEpic = null\r\n        // if (!values.aadharNumber) {\r\n        //     values.aadharNo = \"None\";\r\n        // }\r\n\r\n        values.status = \"submitted\"\r\n        console.log(\"values\", values)\r\n        uploadData(values, fireBaseTableName).then((ref) => {\r\n            console.log(\"got rref now uploading images\");\r\n            uploadAllImages(ref.id).then((res) => {\r\n                console.log(res)\r\n                // setLoading(false);\r\n            }).catch(e => console.log(\"error\", e))\r\n\r\n        }).catch(e => console.log(\"error\", e))\r\n            .finally(() => { setLoading(false); setFormFilled(true); });\r\n\r\n\r\n\r\n    };\r\n\r\n    // const onFinishFailed = (errorInfo) => {\r\n    //     console.log('Failed:', errorInfo);\r\n    // };\r\n    return (\r\n        <>\r\n            {formFilled ? <ThankYou /> : <>\r\n                <Spin size=\"large\" spinning={loading}>\r\n                    <h1>Voter Id form</h1>\r\n                    <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onFinish}\r\n                        initialValues={{\r\n                            'input-number': 3,\r\n                            rate: 3.5,\r\n                        }}\r\n                    >\r\n                        <Form.Item name=\"enrolmentType\" label=\"Enrolment Type\" style={{ textAlign: \"left\" }} rules={[{ required: true, message: 'Please select enrolment type' }]}>\r\n                            <Radio.Group>\r\n                                <Radio value=\"new\" onClick={() => setShifting(false)}>First Time Voter</Radio>\r\n                                <Radio value=\"update\" onClick={() => setShifting(true)}>shifting from another constituency</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n\r\n\r\n\r\n                        <Form.Item name=\"name\" style={{ textAlign: \"left\" }} label=\"Name\" rules={[{ required: true, message: 'Please enter  Name!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item name=\"surname\" style={{ textAlign: \"left\" }} label=\"Surname\" rules={[{ required: true, message: 'Please enter  surname!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"relativeName\" style={{ textAlign: \"left\" }} label=\"Name & surname of a Relative\" rules={[{ required: true, message: 'Please enter  surname!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"relationType\" label=\"Type of relation\" rules={[{ required: true, message: 'Please select Type of relation' }]} style={{ textAlign: \"left\" }}>\r\n                            <Radio.Group>\r\n\r\n                                <Radio value=\"mother\">Mother</Radio>\r\n                                <Radio value=\"father\">Father</Radio>\r\n\r\n                                <Radio value=\"husband\">Husband</Radio>\r\n                                <Radio value=\"wife\">Wife</Radio>\r\n\r\n                                <Radio value=\"other\">Other</Radio>\r\n                                {/* calculate age as on 1st jan present year */}\r\n\r\n\r\n\r\n\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"dob\" style={{ textAlign: \"left\" }} label=\"Date Of Birth \" rules={[{ required: true, message: 'Please enter Date Of Birth!' }]}>\r\n                            <DatePicker format={dateFormat} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"gender\" label=\"Gender\" style={{ textAlign: \"left\" }} rules={[{ required: true, message: 'Please select gender' }]}>\r\n                            <Radio.Group>\r\n                                <Radio value=\"male\" >Male</Radio>\r\n                                <Radio value=\"female\">Female</Radio>\r\n                                <Radio value=\"tansgender\">Transgender</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n\r\n                        <h4>Current address</h4>\r\n                        <br></br>\r\n\r\n                        <Input.Group name=\"currentAddress\" label=\"Current Address\" rules={[{ required: true, message: 'Please enter address' }]} style={{ textAlign: \"left\" }}>\r\n                            <Form.Item name=\"currentAddressL1\" style={{ textAlign: \"left\" }} label=\"Flat / Room / Door / Block No.\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"currentAddressL2\" style={{ textAlign: \"left\" }} label=\"Street / Area / Locality\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"currentAddressL3\" style={{ textAlign: \"left\" }} label=\"Town/Village\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"currentAddressL4\" style={{ textAlign: \"left\" }} label=\"Post Office\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"currentCity\" style={{ textAlign: \"left\" }} label=\"Town / City / District\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"currentState\"\r\n                                label=\"State\"\r\n                                hasFeedback\r\n                                rules={[{ required: true, message: 'Please select your state!' }]}\r\n                                style={{ textAlign: \"left\" }}\r\n                            >\r\n                                <Select placeholder=\"Please select a state\">\r\n                                    {\r\n                                        states.map((state) => (\r\n                                            <Option key={state.id} value={state.name}>{state.name}</Option>\r\n                                        ))\r\n                                    }\r\n\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Pincode\" style={{ textAlign: \"left\" }}>\r\n                                <Form.Item name=\"currentPincode\" rules={[{ required: true, message: 'Please select your pincode!' }]} >\r\n                                    <InputNumber style={{ width: 100 }} />\r\n                                </Form.Item>\r\n                            </Form.Item>\r\n\r\n                        </Input.Group>\r\n\r\n                        <h4>Permanent address</h4>\r\n                        <br></br>\r\n\r\n                        <Input.Group name=\"permanantAddress\" label=\"Permanent Address\" rules={[{ required: true, message: 'Please enter address' }]} style={{ textAlign: \"left\" }}>\r\n                            <Form.Item name=\"permanentAddressL1\" style={{ textAlign: \"left\" }} label=\"Flat / Room / Door / Block No.\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"permanentAddressL2\" style={{ textAlign: \"left\" }} label=\"Street / Area / Locality\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"permanentAddressL3\" style={{ textAlign: \"left\" }} label=\"Town/Village\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"permanentAddressL4\" style={{ textAlign: \"left\" }} label=\"Post Office\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"permanentCity\" style={{ textAlign: \"left\" }} label=\"Town / City / District\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"permanentState\"\r\n                                label=\"State\"\r\n                                hasFeedback\r\n                                rules={[{ required: true, message: 'Please select your state!' }]}\r\n                                style={{ textAlign: \"left\" }}\r\n                            >\r\n                                <Select placeholder=\"Please select a state\">\r\n                                    {\r\n                                        states.map((state) => (\r\n                                            <Option key={state.id} value={state.name}>{state.name}</Option>\r\n                                        ))\r\n                                    }\r\n\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Pincode\" style={{ textAlign: \"left\" }}>\r\n                                <Form.Item name=\"permanentPincode\" rules={[{ required: true, message: 'Please select your pincode!' }]} >\r\n                                    <InputNumber style={{ width: 100 }} />\r\n                                </Form.Item>\r\n                            </Form.Item>\r\n\r\n                        </Input.Group>\r\n\r\n\r\n                        <Form.Item name=\"haveEpic\" label=\"Have EPIC?\" style={{ textAlign: \"left\" }}>\r\n                            <Radio.Group>\r\n                                <Radio value=\"yes\" onClick={() => setHaveEpic(true)}>Yes</Radio>\r\n                                <Radio value=\"no\" onClick={() => setHaveEpic(false)}>No</Radio>\r\n                            </Radio.Group>\r\n                            {haveEPiC ? (\r\n                                <>\r\n                                    <Form.Item label=\"EPIC No\" labelCol={{ span: 4 }}\r\n                                        style={{ textAlign: \"left\" }}>\r\n                                        <Form.Item name=\"epicNumber\"\r\n\r\n                                            rules={[{ required: { haveEPiC }, message: 'Please enter Aadhar Number!' }]}>\r\n                                            <Input style={{ width: 'auto' }} maxlength=\"12\" className=\"aadhar-number\" onChange={onChange} />\r\n                                        </Form.Item>\r\n\r\n                                    </Form.Item>\r\n                                </>\r\n                            ) : <>\r\n\r\n                            </>}\r\n                        </Form.Item>\r\n\r\n\r\n                        {/* disablity */}\r\n\r\n                        <Form.Item style={{ textAlign: 'center' }} name=\"disablity\" label=\"Disablity IF any\" rules={[{ required: true, message: 'Please select One' }]}>\r\n                            <Checkbox.Group style={{ width: '100%' }} onChange={onChange}>\r\n                                <Row>\r\n                                    <Col >\r\n                                        <Checkbox value=\"visual\">Visual impairment</Checkbox>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Checkbox value=\"speech-hearing\">Speech & hearing disability</Checkbox>\r\n                                    </Col>\r\n\r\n                                    <Col >\r\n                                        <Checkbox value=\"locomotor\">Locomotor disability</Checkbox>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Checkbox value=\"other\">Other</Checkbox>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Checkbox value=\"None\">None</Checkbox>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Checkbox.Group>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"email\" style={{ textAlign: \"left\" }} label=\"Email\">\r\n                            <Input type=\"email\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"mobileNo\" label=\"Contact No\" style={{ textAlign: \"left\" }}>\r\n\r\n                            <InputNumber style={{ width: 120 }} maxlength=\"10\" />\r\n\r\n                        </Form.Item>\r\n\r\n\r\n\r\n                        {shifting ? (<>\r\n                            <h4 style={{ textAlign: \"left\" }}>Address of earlier place of ordinary residence (if applying due to shifting from another constituency)</h4>\r\n                            <Input.Group name=\"shiftingPermanentAddress\" label=\"Old Address\" rules={[{ required: true, message: 'Please enter address' }]} style={{ textAlign: \"left\" }}>\r\n                                <Form.Item name=\"shiftingPermanentAddressL1\" style={{ textAlign: \"left\" }} label=\"Flat / Room / Door / Block No.\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"shiftingPermanentAddressL2\" style={{ textAlign: \"left\" }} label=\"Street / Area / Locality\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"shiftingPermanentAddressL3\" style={{ textAlign: \"left\" }} label=\"Town/Village\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"shiftingPermanentAddressL4\" style={{ textAlign: \"left\" }} label=\"Post Office\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"shiftingPermanentCity\" style={{ textAlign: \"left\" }} label=\"Town / City / District\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"shiftingPermanentAddressState\"\r\n                                    label=\"State\"\r\n                                    hasFeedback\r\n                                    rules={[{ required: true, message: 'Please select your state!' }]}\r\n                                    style={{ textAlign: \"left\" }}\r\n                                >\r\n                                    <Select placeholder=\"Please select a state\">\r\n                                        {\r\n                                            states.map((state) => (\r\n                                                <Option key={state.id} value={state.name}>{state.name}</Option>\r\n                                            ))\r\n                                        }\r\n\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Pincode\" style={{ textAlign: \"left\" }}>\r\n                                    <Form.Item name=\"shiftingPermanentAddresPincode\" rules={[{ required: true, message: 'Please select your pincode!' }]} >\r\n                                        <InputNumber style={{ width: 100 }} />\r\n                                    </Form.Item>\r\n                                </Form.Item>\r\n\r\n                            </Input.Group>\r\n                        </>) : (<>\r\n\r\n                        </>)}\r\n\r\n\r\n                        <Form.Item name=\"place\" style={{ textAlign: \"left\" }} label=\"Place\" rules={[{ required: true, message: 'Please enter detail!' }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"sign\"\r\n                            label=\"Upload Your Sign\"\r\n                            valuePropName=\"signList\"\r\n                            getValueFromEvent={normFile}\r\n                            extra=\"\"\r\n                            style={{ textAlign: \"left\" }}\r\n                            rules={[{ required: true, message: 'Please upload your photo!' }]}\r\n                        >\r\n                            <Upload name=\"logo\" listType=\"picture\" customRequest={dummyRequest}>\r\n                                <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"aadharCardPhoto\"\r\n                            label=\"Upload Your AAdharCard photo\"\r\n                            valuePropName=\"aadhar-card-photo\"\r\n                            getValueFromEvent={normFile}\r\n                            extra=\"\"\r\n                            style={{ textAlign: \"left\" }}\r\n                            rules={[{ required: true, message: 'Please upload your aadharcard  photo!' }]}\r\n                        >\r\n                            <Upload name=\"logo\" listType=\"picture\" customRequest={dummyRequest}>\r\n                                <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"passportPhoto\"\r\n                            label=\"Upload Your Passport size photo\"\r\n                            valuePropName=\"passport-size-photo\"\r\n                            getValueFromEvent={normFile}\r\n                            extra=\"\"\r\n                            style={{ textAlign: \"left\" }}\r\n                            rules={[{ required: true, message: 'Please upload your Passport size  photo!' }]}\r\n                        >\r\n                            <Upload name=\"logo\" listType=\"picture\" customRequest={dummyRequest}>\r\n                                <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 5 }} style={{ textAlign: \"center\" }} >\r\n                            <Button type=\"primary\" disabled={error}  htmlType=\"submit\">\r\n                                Submit\r\n                    </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Spin>\r\n\r\n            </>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VoterIdForm\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\dashboard.js",["134","135","136","137","138"],"import React, { useEffect } from 'react'\r\nimport { Button, Card, Col, Row } from 'antd';\r\nimport '../../custom.css'\r\nimport { projectFirestore } from '../../firebase';\r\nimport useState from 'react-usestateref'\r\n\r\n\r\nconst dbName = {\r\n    aadharAdmin: \"aadharCardData\",\r\n    panAdmin: \"panCardData\",\r\n    voterIdAdmin: \"voterIdData\"\r\n}\r\n\r\nfunction Dashboard({ adminType }) {\r\n    var [all, setAllCount, allCountRef] = useState(0)\r\n    var [approved, setApprovedCount, approvedCountRef] = useState(0)\r\n    var [rejected, setRejectedCount, rejectCountRef] = useState(0)\r\n    const allCount = () => {\r\n        // console.log(\"dbName in all count\", dbName[adminType]);\r\n        const collectionRef = projectFirestore.collection(dbName[adminType]);\r\n        collectionRef.onSnapshot((snapshot) => {\r\n            console.log(\"snapShot: \", snapshot.docs.length);\r\n            setAllCount( snapshot.docs.length);\r\n        })\r\n    }\r\n    const approvedCount = () => {\r\n        // console.log(\"dbName in all count\", dbName[adminType]);\r\n        const collectionRef = projectFirestore.collection(dbName[adminType]);\r\n        collectionRef.where('status', '==', 'approved').onSnapshot((snapshot) => {\r\n            console.log(\"approved: \", snapshot.docs.length);\r\n            setApprovedCount(snapshot.docs.length)\r\n        })\r\n    }\r\n    const rejectCount = () => {\r\n        const collectionRef = projectFirestore.collection(dbName[adminType]);\r\n        collectionRef.where('status', '==', 'rejected').onSnapshot((snapshot) => {\r\n            console.log(\"rejected: \", snapshot.docs.length);\r\n            setRejectedCount(snapshot.docs.length)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (adminType) {\r\n            allCount()\r\n            approvedCount()\r\n            rejectCount()\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                Welcome to {adminType} Dashboard\r\n            </h1>\r\n            <Row gutter={[16, { xs: 8, sm: 16, md: 24, lg: 32 }]}>\r\n                <Col xs={24} sm={8}>\r\n                    <Card title=\"Submitted\" bordered={false} style={{ textAlign: 'center' }}>\r\n                        <span className=\"total\">{allCountRef.current}</span>\r\n                        <p>Total Submited</p>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={24} sm={8}>\r\n                    <Card title=\"Approved\" bordered={false} style={{ textAlign: 'center' }}>\r\n                        <span className=\"total\">{approvedCountRef.current}</span>\r\n                        <p>Total Approved</p>\r\n\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={24} sm={8}>\r\n                    <Card title=\"Rejected\" bordered={false} style={{ textAlign: 'center' }}>\r\n                        <span className=\"total\">{rejectCountRef.current}</span>\r\n                        <p>Total Rejected</p>\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\approvedList.js",["139"],"import { useEffect } from 'react'\r\nimport ListItem from './listItem'\r\nimport useState from 'react-usestateref'\r\nimport { projectFirestore } from '../../firebase';\r\n\r\nfunction ApprovedList({ adminType, adminDbName }) {\r\n    const [approvedList, setApprovedList, approvedListRef] = useState([])\r\n    const viewAll = () => {\r\n\r\n        const collectionRef = projectFirestore.collection(adminDbName);\r\n        collectionRef.where(\"status\", '==', 'approved').onSnapshot((snapshot) => {\r\n            setApprovedList(snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n\r\n        })\r\n        // console.log(\"before setting data \", approvedList);\r\n        // console.log(\"before setting data \", approvedListRef.current);\r\n\r\n    }\r\n    const renderList = (type) => {\r\n        console.log(\"renderList admintype\", type);\r\n        if (type.adminType === \"aadharAdmin\") {\r\n            console.log(\"inside aadhar admin\");\r\n            return (approvedListRef.current &&\r\n                approvedListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"viewAll\"\r\n                            key={doc.id}\r\n                            name={doc.data.fullName}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status}\r\n                            listType=\"Aadhar Card\" />\r\n                    </>)))\r\n\r\n        }\r\n        else if (type.adminType === \"panAdmin\") {\r\n            return (approvedListRef.current &&\r\n                approvedListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"viewAll\"\r\n                            key={doc.id}\r\n                            name={doc.data.pancardName}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status}\r\n                            listType=\"Pan Card\" \r\n                           \r\n                            />\r\n                    </>)))\r\n        }\r\n        else if (type.adminType === \"voterIdAdmin\") {\r\n\r\n            return (approvedListRef.current &&\r\n                approvedListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"viewAll\"\r\n                            key={doc.id}\r\n                            name={doc.data.name}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status}\r\n                            listType=\"VoterId Card\"  />\r\n                    </>)))\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"useeffect called\")\r\n        viewAll()\r\n        console.log(\"aaplicationList\", approvedList, approvedListRef.current);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                Approved list\r\n                {/* {adminType} {adminDbName} */}\r\n            </h1>\r\n            {renderList({ adminType })}\r\n            {/* {\r\n                approvedListRef.current &&\r\n                approvedListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"approvedList\"\r\n                            key={doc.id}\r\n                            name={doc.data.fullName}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status}\r\n                        />\r\n                    </>\r\n                ))\r\n\r\n            } */}\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ApprovedList\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\viewList.js",["140","141","142","143","144","145","146"],"import React, { useEffect } from 'react'\r\nimport useDbOperations, { viewAll } from '../../firebase/dbOperations'\r\nimport ListItem from './listItem'\r\nimport useState from 'react-usestateref'\r\nimport { projectFirestore } from '../../firebase';\r\n\r\n\r\n\r\n\r\n\r\nfunction ViewList({ adminType, adminDbName }) {\r\n    const [applicantList, setApplicantList, applicantListRef] = useState([])\r\n    const [superList, setSuperList, superListRef] = useState([])\r\n    \r\n    \r\n    const superlist = [];\r\n    // const nameFields = {\r\n    //     aadharAdmin: \"fullname\",\r\n    //     panAdmin: \"pancardName\",\r\n    //     voterIdAdmin: \"name\"\r\n    // }\r\n\r\n\r\n\r\n    const renderList = (type) => {\r\n        console.log(\"applicantList in renderlist\", applicantListRef.current);\r\n        if (type === \"aadharAdmin\") {\r\n            console.log(\"inside aadhar admin\");\r\n            return (applicantListRef.current &&\r\n                applicantListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"viewAll\"\r\n                            key={doc.id}\r\n                            name={doc.data.fullName}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status}\r\n                            listType=\"Aadhar Card\" />\r\n                    </>)))\r\n\r\n        }\r\n        else if (type === \"panAdmin\") {\r\n            console.log(\"in pan card if else\");\r\n            return (applicantListRef.current &&\r\n                applicantListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"viewAll\"\r\n                            key={doc.id}\r\n                            name={doc.data.pancardName}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status}\r\n                            listType=\"Pan Card\" />\r\n                    </>)))\r\n        }\r\n        else if (type === \"voterIdAdmin\") {\r\n\r\n            return (applicantListRef.current &&\r\n                applicantListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"viewAll\"\r\n                            key={doc.id}\r\n                            name={doc.data.name}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status}\r\n                            listType=\"VoterId Card\" />\r\n                    </>)))\r\n        }\r\n\r\n    }\r\n    const renderContent = (adminType) => {\r\n        console.log(\"adminType in render Content\", adminType.adminType);\r\n        if (adminType.adminType === \"super\") {\r\n            return (\r\n                <>\r\n                \r\n                    {renderList(\"aadharAdmin\")}\r\n                </>\r\n\r\n\r\n            )\r\n        }\r\n        else\r\n\r\n            return (renderList(adminType.adminType))\r\n    }\r\n    const viewAll = (dbName) => {\r\n        console.log(\"db name in view all\", dbName);\r\n        const collectionRef = projectFirestore.collection(dbName);\r\n        collectionRef.onSnapshot((snapshot) => {\r\n            // console.log(\"snapshot:  \", snapshot.docs);\r\n            setApplicantList(snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n            superlist.push(snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                    db: dbName\r\n                })))\r\n        })\r\n\r\n        // console.log(\"before setting data \", applicantList);\r\n        console.log(\"before setting data \", applicantListRef.current);\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (adminType === \"super\") {\r\n            console.log(\"useeffect adminType\", adminType)\r\n            viewAll(\"aadharCardData\")\r\n            // viewAll(\"voterIdData\")\r\n            // viewAll(\"panCardData\")\r\n        }\r\n        else { viewAll(adminDbName) }\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                View All &nbsp;\r\n                {adminType}\r\n                {/* {nameFields['aadharAdmin'].nameField} */}\r\n            </h1>\r\n            \r\n            {renderContent({ adminType })}\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewList\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\rejectedList.js",["147"],"import { useEffect } from 'react'\r\nimport ListItem from './listItem'\r\n\r\nimport useState from 'react-usestateref'\r\nimport { projectFirestore } from '../../firebase';\r\n\r\n\r\nfunction RejectedList({ adminType, adminDbName }) {\r\n\r\n    const [rejectedList, setRejectedList, rejectedListRef] = useState([])\r\n    const viewAll = () => {\r\n\r\n        const collectionRef = projectFirestore.collection(adminDbName);\r\n        // collectionRef.where(\"status\", '==', 'rejected').onSnapshot((snapshot) => {\r\n\r\n        //     setRejectedList(snapshot.docs.map((doc) => doc.data()))\r\n        // })\r\n\r\n        collectionRef.where(\"status\", '==', 'rejected').onSnapshot((snapshot) => {\r\n            setRejectedList(snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n\r\n        })\r\n\r\n    }\r\n    const renderList = (type) => {\r\n        console.log(\"renderList admintype\", type);\r\n        if (type.adminType === \"aadharAdmin\") {\r\n            console.log(\"inside aadhar admin\");\r\n            return (rejectedListRef.current &&\r\n                rejectedListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"viewAll\"\r\n                            key={doc.id}\r\n                            name={doc.data.fullName}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status} \r\n                            listType=\"Aadhar Card\"\r\n                            />\r\n                    </>)))\r\n\r\n        }\r\n        else if (type.adminType === \"panAdmin\") {\r\n            return (rejectedListRef.current &&\r\n                rejectedListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"viewAll\"\r\n                            key={doc.id}\r\n                            name={doc.data.pancardName}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status} \r\n                            listType=\"Pan Card\"\r\n                            />\r\n                    </>)))\r\n        }\r\n        else if (type.adminType === \"voterIdAdmin\") {\r\n\r\n            return (rejectedListRef.current &&\r\n                rejectedListRef.current.map((doc) => (\r\n                    <>\r\n\r\n                        <ListItem\r\n                            menuType=\"viewAll\"\r\n                            key={doc.id}\r\n                            name={doc.data.name}\r\n                            id={doc.id}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            status={doc.data.status}\r\n                            listType=\"VoterId Card\"  />\r\n                    </>)))\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"useeffect called\")\r\n        viewAll()\r\n        console.log(\"aaplicationList\", rejectedList, rejectedListRef.current);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                RejectedList\r\n                 {/* {adminType} {adminDbName} */}\r\n            </h1>\r\n\r\n\r\n            {renderList({ adminType })}\r\n\r\n            {/* \r\n            {\r\n                rejectedListRef.current &&\r\n                rejectedListRef.current.map((doc) => (\r\n                    <>\r\n                        <ListItem menuType=\"rejectedList\"\r\n                            key={doc.id}\r\n                            name={doc.data.fullName}\r\n                            adminDbName={adminDbName}\r\n                            adminType={adminType}\r\n                            id={doc.id}\r\n                            status={doc.data.status}\r\n                        />\r\n                    </>\r\n                ))\r\n\r\n            } */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RejectedList\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\hooks\\useStorage.js",["148","149"],"import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timeStamp } from '../firebase';\r\n\r\nconst useStorage = (filePhoto, fileSign, fileIdProof, submit, aadharData) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n    console.log(\"form values in usestoreage \", aadharData);\r\n    const uploadPhoto = (image) => {\r\n        if (image) {\r\n            // filePhoto.name =\"abcxyz\"\r\n            const storageRef = projectStorage.ref(image.name);\r\n            \r\n\r\n            storageRef.put(image).on('state_changed', (snap) => {\r\n                let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n                setProgress(percentage);\r\n                // console.log(\"percentage\");\r\n            }, (err) => {\r\n                setError(err);\r\n            }, async () => {\r\n                const url = await storageRef.getDownloadURL();\r\n                // const createdAt = timeStamp();\r\n                // await collectionRef.add({ url, createdAt });\r\n                console.log(\"data uploaded to firebase\");\r\n                setUrl(url);\r\n                \r\n            });\r\n            console.log(\"image uploaded made\");\r\n        }\r\n    }\r\n\r\n    const uploadData = (aadharData) =>{\r\n        console.log(\"uploding aadhar data\");\r\n        const collectionRef = projectFirestore.collection('adharCardData');\r\n        collectionRef.add(aadharData)\r\n          .then((ref) => {\r\n            console.log(\"Added doc: \", ref);\r\n            // Added doc with ID:  ZzhIgLqELaoE3eSsOazu\r\n          });\r\n    }\r\n\r\n    useEffect(() => {\r\n        // references\r\n        console.log(\"use  effect called \");\r\n        console.log(\"aadharData in useEffect\",aadharData);\r\n        if (aadharData) {\r\n            uploadData(aadharData);\r\n            uploadPhoto(filePhoto);\r\n            uploadPhoto(fileSign);\r\n            uploadPhoto(fileIdProof);\r\n        }\r\n        //   console.log(\"use  \",filePhoto)\r\n       \r\n\r\n    }, [submit]);\r\n    // console.log(progress, url);\r\n    return { progress, url, error };\r\n\r\n}\r\n\r\n\r\nexport default useStorage;",["150","151"],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\firebase.js",[],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\firebase\\addData.js",[],"G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\thankYou.js",["152","153"],"import React, { useState, useEffect } from 'react'\r\nimport { CheckCircleTwoTone } from '@ant-design/icons';\r\nimport { Card} from 'antd';\r\nimport '../custom.css'\r\n\r\n\r\nfunction ThankYou() {\r\n    return (\r\n        <>\r\n            <Card title=\"Success!\" style={{marginBottom:'15rem'}} bordered={false}>\r\n                <CheckCircleTwoTone className=\"thankyou\" twoToneColor=\"#52c41a\" />\r\n                <h1>Thanks You for filling the form</h1>\r\n                <p>We will send You a client copy of this form on No : 8888888888 </p>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ThankYou\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\listItem.js",["154","155","156"],"import React from 'react'\r\nimport useState from 'react-usestateref'\r\nimport { Button, Card, Col, Row, Modal } from 'antd';\r\nimport '../../custom.css'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { projectFirestore } from '../../firebase';\r\n\r\n\r\nconst { confirm } = Modal;\r\n\r\n\r\nfunction ListItem({ menuType, name, adminDbName, id, status, listType }) {\r\n    const [viewAllVisible, setViewAllVisible] = useState(false);\r\n    const [modalContent, setModalContent, modalContentRef] = useState(\"\");\r\n    const [modalContentKeys, setModalContentKeys, modalContentKeysRef] = useState([]);\r\n    const [modalContentValues, setModalContentValues, modalContentValuesRef] = useState([]);\r\n    const collectionRef = projectFirestore.collection(adminDbName);\r\n    // console.log(\"status\", status);\r\n\r\n    var disableApproved = false;\r\n    var disableRejected = false;\r\n    if (status === \"approved\") {\r\n        disableApproved = true\r\n    }\r\n    else if (status === \"rejected\") {\r\n        disableRejected = true\r\n    }\r\n\r\n\r\n    const viewById = (applicantId) => {\r\n        console.log(\"view by id \", applicantId.id);\r\n        collectionRef.doc(applicantId.id).get().then((doc) => {\r\n            var data = doc.data();\r\n            data.createdAt = data.createdAt.toDate().toLocaleDateString()\r\n            data.dob = data.dob.toDate().toLocaleDateString()\r\n            // function toLocaleDateString() { [native code] }\r\n            console.log(\"data\", data);\r\n            setModalContent(data)\r\n            // console.log(\"keys\", modalContentKeysRef.current);\r\n        })\r\n        \r\n\r\n\r\n        setModalContentKeys(Object.keys(modalContentRef.current))\r\n        setModalContentValues(Object.values(modalContentRef.current))\r\n\r\n        console.log(\"keys\", modalContentKeysRef.current);\r\n        console.log(\"values\", modalContentValuesRef.current);\r\n        // console.log(\"date\",modalContentValues[2].toDate());\r\n    }\r\n\r\n    const approveById = (applicantId) => {\r\n        // console.log(applicantId.id);\r\n        collectionRef.doc(applicantId.id).update({\r\n            status: \"approved\",\r\n        });\r\n    }\r\n\r\n    const rejectById = (applicantId) => {\r\n        console.log('id:', applicantId.id)\r\n        console.log(\"reject by id\");\r\n        collectionRef.doc(applicantId.id).update({\r\n            status: \"rejected\",\r\n        });\r\n    }\r\n\r\n    function showConfirm() {\r\n        confirm({\r\n            title: `Are you sure you want to reject the form?`,\r\n\r\n            icon: <ExclamationCircleOutlined />,\r\n            onOk() {\r\n\r\n                rejectById({ id });\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24} style={{ padding: '15px', textAlign: 'left' }}>\r\n                    <Card bordered={false} style={{ textAlign: 'center' }}>\r\n                        <span className=\"listContainer\">\r\n                            <span className=\"listNameContainer\">\r\n                                <span className=\"listName\">\r\n                                    {name}\r\n                                </span>\r\n                                <span className=\"listType\">\r\n                                    {listType} \r\n                                </span>\r\n                            </span>\r\n                            <span className=\"listItemContainer\">\r\n\r\n                                {menuType == \"approvedList\" ?\r\n                                    <>\r\n                                        <span className=\"listItem\">\r\n\r\n                                            <Button onClick={() => {\r\n                                                setViewAllVisible(true)\r\n                                                viewById({ id })\r\n                                            }}>View</Button>\r\n                                        </span>\r\n                                        <span className=\"listItem\">\r\n                                            <Button type=\"danger\" onClick={showConfirm}> Reject</Button>\r\n                                        </span>\r\n                                    </>\r\n                                    : menuType == \"rejectedList\" ? <>\r\n                                        <span className=\"listItem\">\r\n\r\n                                            <Button onClick={() => {\r\n                                                setViewAllVisible(true)\r\n                                                viewById({ id })\r\n                                            }}>View</Button>\r\n                                        </span>\r\n                                        <span className=\"listItem\">\r\n                                            <Button type=\"primary\" onClick={() => approveById({ id })}>Approve</Button>\r\n                                        </span>\r\n\r\n                                    </> : <>\r\n                                        <span className=\"listItem\">\r\n\r\n                                            <Button onClick={() => {\r\n                                                setViewAllVisible(true)\r\n                                                viewById({ id })\r\n                                            }}>View</Button>\r\n                                        </span>\r\n                                        <span className=\"listItem\">\r\n                                            <Button type=\"primary\" disabled={disableApproved} onClick={() => approveById({ id })}>Approve</Button>\r\n                                        </span>\r\n                                        <span className=\"listItem\">\r\n                                            <Button type=\"danger\" disabled={disableRejected} onClick={showConfirm}> Reject</Button>\r\n                                        </span>\r\n                                    </>}\r\n\r\n\r\n                            </span>\r\n\r\n                        </span>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Modal\r\n                title=\"Modal 1000px width\"\r\n                visible={viewAllVisible}\r\n                onOk={() => setViewAllVisible(false)}\r\n                onCancel={() => setViewAllVisible(false)}\r\n                width={1000}\r\n            >\r\n                {\r\n                    modalContentKeys &&\r\n                    modalContentKeys.map((values, index) => (\r\n                        <>\r\n                            <p><span><b>{values}</b> : </span><span>{modalContentValues[index]}</span></p>\r\n                        </>\r\n                    ))\r\n                }\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\firebase\\dbOperations.js",["157","158","159","160","161","162","163","164"],"import { projectFirestore } from '../firebase';\r\nimport {  useEffect} from 'react'\r\nimport useState from 'react-usestateref'\r\nconst useDbOperations = (dbName) => {\r\n    var [applicantList, setApplicantList,applicantListRef] = useState(null);\r\n\r\n\r\n    const viewAll = (dbName) => {\r\n        setApplicantList(\"hello\" + dbName)\r\n    }\r\n\r\n    const viewApproved = (adminType) => {\r\n        // returm array of all users\r\n    }\r\n\r\n    const viewRejected = (adminType) => {\r\n        // returm array of all users\r\n    }\r\n\r\n    const viewById = (adminType, id) => {\r\n        // returm array of form data \r\n    }\r\n\r\n    const approveById = (adminType, id) => {\r\n        // approve by id \r\n    }\r\n\r\n\r\n    const rejectById = (adminType, id) => {\r\n        // reject by Id \r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        viewAll(dbName);\r\n        console.log(\"applicantListRef.current\",applicantListRef.current)\r\n    }, [dbName])\r\n    return applicantListRef.current;\r\n\r\n}\r\n\r\n\r\nexport default useDbOperations;","G:\\naiti\\react\\formEasy\\form-easy-frontend\\src\\components\\admin\\wpAdmin.js",["165","166","167","168","169","170","171"],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":20,"column":9,"nodeType":"178","messageId":"179","endLine":20,"endColumn":16},{"ruleId":"176","severity":1,"message":"180","line":66,"column":12,"nodeType":"178","messageId":"179","endLine":66,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":29,"column":6,"nodeType":"183","endLine":29,"endColumn":17,"suggestions":"184"},{"ruleId":"176","severity":1,"message":"185","line":48,"column":10,"nodeType":"178","messageId":"179","endLine":48,"endColumn":19},{"ruleId":"176","severity":1,"message":"186","line":49,"column":10,"nodeType":"178","messageId":"179","endLine":49,"endColumn":18},{"ruleId":"176","severity":1,"message":"187","line":50,"column":10,"nodeType":"178","messageId":"179","endLine":50,"endColumn":21},{"ruleId":"176","severity":1,"message":"188","line":53,"column":39,"nodeType":"178","messageId":"179","endLine":53,"endColumn":52},{"ruleId":"176","severity":1,"message":"185","line":55,"column":10,"nodeType":"178","messageId":"179","endLine":55,"endColumn":19},{"ruleId":"176","severity":1,"message":"186","line":56,"column":10,"nodeType":"178","messageId":"179","endLine":56,"endColumn":18},{"ruleId":"176","severity":1,"message":"189","line":57,"column":10,"nodeType":"178","messageId":"179","endLine":57,"endColumn":20},{"ruleId":"176","severity":1,"message":"190","line":60,"column":39,"nodeType":"178","messageId":"179","endLine":60,"endColumn":48},{"ruleId":"191","severity":1,"message":"192","line":113,"column":27,"nodeType":"193","messageId":"194","endLine":113,"endColumn":29},{"ruleId":"176","severity":1,"message":"185","line":49,"column":10,"nodeType":"178","messageId":"179","endLine":49,"endColumn":19},{"ruleId":"176","severity":1,"message":"186","line":50,"column":10,"nodeType":"178","messageId":"179","endLine":50,"endColumn":18},{"ruleId":"176","severity":1,"message":"189","line":51,"column":10,"nodeType":"178","messageId":"179","endLine":51,"endColumn":20},{"ruleId":"176","severity":1,"message":"190","line":54,"column":39,"nodeType":"178","messageId":"179","endLine":54,"endColumn":48},{"ruleId":"176","severity":1,"message":"195","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":16},{"ruleId":"176","severity":1,"message":"196","line":15,"column":10,"nodeType":"178","messageId":"179","endLine":15,"endColumn":13},{"ruleId":"176","severity":1,"message":"197","line":16,"column":10,"nodeType":"178","messageId":"179","endLine":16,"endColumn":18},{"ruleId":"176","severity":1,"message":"198","line":17,"column":10,"nodeType":"178","messageId":"179","endLine":17,"endColumn":18},{"ruleId":"181","severity":1,"message":"199","line":49,"column":8,"nodeType":"183","endLine":49,"endColumn":10,"suggestions":"200"},{"ruleId":"181","severity":1,"message":"201","line":84,"column":8,"nodeType":"183","endLine":84,"endColumn":10,"suggestions":"202"},{"ruleId":"176","severity":1,"message":"203","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":23},{"ruleId":"176","severity":1,"message":"204","line":2,"column":27,"nodeType":"178","messageId":"179","endLine":2,"endColumn":34},{"ruleId":"176","severity":1,"message":"205","line":12,"column":12,"nodeType":"178","messageId":"179","endLine":12,"endColumn":25},{"ruleId":"176","severity":1,"message":"206","line":13,"column":12,"nodeType":"178","messageId":"179","endLine":13,"endColumn":21},{"ruleId":"176","severity":1,"message":"207","line":13,"column":23,"nodeType":"178","messageId":"179","endLine":13,"endColumn":35},{"ruleId":"176","severity":1,"message":"208","line":13,"column":37,"nodeType":"178","messageId":"179","endLine":13,"endColumn":49},{"ruleId":"181","severity":1,"message":"209","line":131,"column":8,"nodeType":"183","endLine":131,"endColumn":10,"suggestions":"210"},{"ruleId":"181","severity":1,"message":"211","line":90,"column":8,"nodeType":"183","endLine":90,"endColumn":10,"suggestions":"212"},{"ruleId":"176","severity":1,"message":"213","line":2,"column":44,"nodeType":"178","messageId":"179","endLine":2,"endColumn":53},{"ruleId":"181","severity":1,"message":"214","line":56,"column":8,"nodeType":"183","endLine":56,"endColumn":16,"suggestions":"215"},{"ruleId":"172","replacedBy":"216"},{"ruleId":"174","replacedBy":"217"},{"ruleId":"176","severity":1,"message":"218","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"219","line":1,"column":27,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"220","line":14,"column":12,"nodeType":"178","messageId":"179","endLine":14,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":98,"column":43,"nodeType":"193","messageId":"194","endLine":98,"endColumn":45},{"ruleId":"191","severity":1,"message":"192","line":111,"column":48,"nodeType":"193","messageId":"194","endLine":111,"endColumn":50},{"ruleId":"176","severity":1,"message":"221","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"205","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":23},{"ruleId":"176","severity":1,"message":"222","line":12,"column":11,"nodeType":"178","messageId":"179","endLine":12,"endColumn":23},{"ruleId":"176","severity":1,"message":"223","line":16,"column":11,"nodeType":"178","messageId":"179","endLine":16,"endColumn":23},{"ruleId":"176","severity":1,"message":"224","line":20,"column":11,"nodeType":"178","messageId":"179","endLine":20,"endColumn":19},{"ruleId":"176","severity":1,"message":"225","line":24,"column":11,"nodeType":"178","messageId":"179","endLine":24,"endColumn":22},{"ruleId":"176","severity":1,"message":"226","line":29,"column":11,"nodeType":"178","messageId":"179","endLine":29,"endColumn":21},{"ruleId":"181","severity":1,"message":"227","line":39,"column":8,"nodeType":"183","endLine":39,"endColumn":16,"suggestions":"228"},{"ruleId":"176","severity":1,"message":"229","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":15},{"ruleId":"230","severity":2,"message":"231","line":4,"column":1,"nodeType":"232","endLine":4,"endColumn":52,"fix":"233"},{"ruleId":"230","severity":2,"message":"231","line":5,"column":1,"nodeType":"232","endLine":5,"endColumn":25,"fix":"234"},{"ruleId":"176","severity":1,"message":"235","line":49,"column":20,"nodeType":"178","messageId":"179","endLine":49,"endColumn":29},{"ruleId":"236","severity":2,"message":"237","line":49,"column":33,"nodeType":"178","messageId":"238","endLine":49,"endColumn":41},{"ruleId":"176","severity":1,"message":"239","line":50,"column":20,"nodeType":"178","messageId":"179","endLine":50,"endColumn":29},{"ruleId":"236","severity":2,"message":"237","line":50,"column":33,"nodeType":"178","messageId":"238","endLine":50,"endColumn":41},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'getData' is assigned a value but never used.","Identifier","unusedVar","'adminDbName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'adminDbName'. Either include it or remove the dependency array. If 'setshowContent' needs the current value of 'adminDbName', you can also switch to useReducer instead of useState and read 'adminDbName' in the reducer.","ArrayExpression",["242"],"'filePhoto' is assigned a value but never used.","'fileSign' is assigned a value but never used.","'fileIdProof' is assigned a value but never used.","'formFilledRef' is assigned a value but never used.","'fileAadhar' is assigned a value but never used.","'filledRef' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'all' is assigned a value but never used.","'approved' is assigned a value but never used.","'rejected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'adminType', 'allCount', 'approvedCount', and 'rejectCount'. Either include them or remove the dependency array.",["243"],"React Hook useEffect has missing dependencies: 'approvedList', 'approvedListRef', and 'viewAll'. Either include them or remove the dependency array.",["244"],"'useDbOperations' is defined but never used.","'viewAll' is defined but never used.","'applicantList' is assigned a value but never used.","'superList' is assigned a value but never used.","'setSuperList' is assigned a value but never used.","'superListRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'adminDbName', 'adminType', and 'viewAll'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has missing dependencies: 'rejectedList', 'rejectedListRef', and 'viewAll'. Either include them or remove the dependency array.",["246"],"'timeStamp' is defined but never used.","React Hook useEffect has missing dependencies: 'aadharData', 'fileIdProof', 'filePhoto', and 'fileSign'. Either include them or remove the dependency array.",["247"],["240"],["241"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'modalContent' is assigned a value but never used.","'projectFirestore' is defined but never used.","'viewApproved' is assigned a value but never used.","'viewRejected' is assigned a value but never used.","'viewById' is assigned a value but never used.","'approveById' is assigned a value but never used.","'rejectById' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'applicantListRef' and 'viewAll'. Either include them or remove the dependency array.",["248"],"'Footer' is assigned a value but never used.","import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"249","text":"250"},{"range":"251","text":"252"},"'setShowQr' is assigned a value but never used.","no-undef","'useState' is not defined.","undef","'setQrdata' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},[147,147],"",[0,173],"import React from 'react'\r\nimport { Layout } from 'antd';\r\nimport { WAConnection } from '@adiwajshing/baileys'\r\nimport * as fs from 'fs'\r\nconst { Footer, Content } = Layout;","Update the dependencies array to be: [adminDbName, adminType]",{"range":"267","text":"268"},"Update the dependencies array to be: [adminType, allCount, approvedCount, rejectCount]",{"range":"269","text":"270"},"Update the dependencies array to be: [approvedList, approvedListRef, viewAll]",{"range":"271","text":"272"},"Update the dependencies array to be: [adminDbName, adminType, viewAll]",{"range":"273","text":"274"},"Update the dependencies array to be: [rejectedList, rejectedListRef, viewAll]",{"range":"275","text":"276"},"Update the dependencies array to be: [aadharData, fileIdProof, filePhoto, fileSign, submit]",{"range":"277","text":"278"},"Update the dependencies array to be: [applicantListRef, dbName, viewAll]",{"range":"279","text":"280"},[912,923],"[adminDbName, adminType]",[1801,1803],"[adminType, allCount, approvedCount, rejectCount]",[3156,3158],"[approvedList, approvedListRef, viewAll]",[4313,4315],"[adminDbName, adminType, viewAll]",[3204,3206],"[rejectedList, rejectedListRef, viewAll]",[2046,2054],"[aadharData, fileIdProof, filePhoto, fileSign, submit]",[906,914],"[applicantListRef, dbName, viewAll]"]