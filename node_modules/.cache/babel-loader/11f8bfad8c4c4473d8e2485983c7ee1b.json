{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // import {projectStorage} from '../firebase';\n\nconst useStorage = (filePhoto, fileSign, fileIdProof) => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      await collectionRef.add({\n        url,\n        createdAt\n      });\n      setUrl(url);\n    });\n    console.log(\"changes made\");\n  }, [filePhoto, fileSign, fileIdProof]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["G:/naiti/react/formEasy/form-easy-frontend/src/hooks/useStorage.js"],"names":["useState","useEffect","useStorage","filePhoto","fileSign","fileIdProof","progress","setProgress","error","setError","url","setUrl","storageRef","projectStorage","ref","file","name","collectionRef","projectFirestore","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","timestamp","add","console","log"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC,C,CACA;;AAEA,MAAMC,UAAU,GAAG,CAACC,SAAD,EAAWC,QAAX,EAAoBC,WAApB,KAAoC;AAAA;;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMW,UAAU,GAAGC,cAAc,CAACC,GAAf,CAAmBC,IAAI,CAACC,IAAxB,CAAnB;AACA,UAAMC,aAAa,GAAGC,gBAAgB,CAACC,UAAjB,CAA4B,QAA5B,CAAtB;AAEAP,IAAAA,UAAU,CAACQ,GAAX,CAAeL,IAAf,EAAqBM,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAU;AACjD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAlB,MAAAA,WAAW,CAACgB,UAAD,CAAX;AACD,KAHD,EAGIG,GAAD,IAAS;AACVjB,MAAAA,QAAQ,CAACiB,GAAD,CAAR;AACD,KALD,EAKG,YAAY;AACb,YAAMhB,GAAG,GAAG,MAAME,UAAU,CAACe,cAAX,EAAlB;AACA,YAAMC,SAAS,GAAGC,SAAS,EAA3B;AACA,YAAMZ,aAAa,CAACa,GAAd,CAAkB;AAAEpB,QAAAA,GAAF;AAAOkB,QAAAA;AAAP,OAAlB,CAAN;AACAjB,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAVD;AAWFqB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACC,GAjBQ,EAiBN,CAAC7B,SAAD,EAAWC,QAAX,EAAoBC,WAApB,CAjBM,CAAT;AAmBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AAEH,CA1BD;;GAAMN,U;;AA6BN,eAAeA,UAAf","sourcesContent":["import {useState,useEffect} from 'react';\r\n// import {projectStorage} from '../firebase';\r\n\r\nconst useStorage = (filePhoto,fileSign,fileIdProof) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      // references\r\n      const storageRef = projectStorage.ref(file.name);\r\n      const collectionRef = projectFirestore.collection('images');\r\n      \r\n      storageRef.put(file).on('state_changed', (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      }, (err) => {\r\n        setError(err);\r\n      }, async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        await collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      });\r\n    console.log(\"changes made\");\r\n    }, [filePhoto,fileSign,fileIdProof]);\r\n  \r\n    return { progress, url, error };\r\n    \r\n}\r\n\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}