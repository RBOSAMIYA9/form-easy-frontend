{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timeStamp } from '../firebase';\n\nconst useStorage = (filePhoto, fileSign, fileIdProof, submit) => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  const uploadPhoto = image => {\n    if (filePhoto) {\n      // filePhoto.name =\"abcxyz\"\n      const storageRef = projectStorage.ref(filePhoto.name); // const collectionRef = projectFirestore.collection('adharCardData');\n\n      storageRef.put(filePhoto).on('state_changed', snap => {\n        let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n        setProgress(percentage);\n      }, err => {\n        setError(err);\n      }, async () => {\n        const url = await storageRef.getDownloadURL(); //     // const createdAt = timestamp();\n        //     // await collectionRef.add({ url, createdAt });\n\n        setUrl(url);\n      });\n      console.log(\"changes made\");\n    }\n  };\n\n  useEffect(() => {\n    // references\n    console.log(\"use storeage called \"); //   console.log(\"use  \",filePhoto)\n  }, [submit]);\n  console.log(progress, url);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["G:/naiti/react/formEasy/form-easy-frontend/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","timeStamp","useStorage","filePhoto","fileSign","fileIdProof","submit","progress","setProgress","error","setError","url","setUrl","uploadPhoto","image","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,QAA4D,aAA5D;;AAEA,MAAMC,UAAU,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,WAAtB,EAAmCC,MAAnC,KAA8C;AAAA;;AAC7D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,IAAD,CAA9B;;AAEA,QAAMgB,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAIX,SAAJ,EAAe;AACX;AACA,YAAMY,UAAU,GAAGhB,cAAc,CAACiB,GAAf,CAAmBb,SAAS,CAACc,IAA7B,CAAnB,CAFW,CAGX;;AAEAF,MAAAA,UAAU,CAACG,GAAX,CAAef,SAAf,EAA0BgB,EAA1B,CAA6B,eAA7B,EAA+CC,IAAD,IAAU;AACpD,YAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAf,QAAAA,WAAW,CAACa,UAAD,CAAX;AACH,OAHD,EAGIG,GAAD,IAAS;AACRd,QAAAA,QAAQ,CAACc,GAAD,CAAR;AACH,OALD,EAKG,YAAY;AACX,cAAMb,GAAG,GAAG,MAAMI,UAAU,CAACU,cAAX,EAAlB,CADW,CAEX;AACA;;AACAb,QAAAA,MAAM,CAACD,GAAD,CAAN;AACH,OAVD;AAWAe,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ,GAnBD;;AAqBA7B,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA4B,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAFY,CAGZ;AAGH,GANQ,EAMN,CAACrB,MAAD,CANM,CAAT;AAOAoB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAZ,EAAsBI,GAAtB;AACA,SAAO;AAAEJ,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AAEH,CApCD;;GAAMP,U;;AAuCN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timeStamp } from '../firebase';\r\n\r\nconst useStorage = (filePhoto, fileSign, fileIdProof, submit) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    const uploadPhoto = (image) => {\r\n        if (filePhoto) {\r\n            // filePhoto.name =\"abcxyz\"\r\n            const storageRef = projectStorage.ref(filePhoto.name);\r\n            // const collectionRef = projectFirestore.collection('adharCardData');\r\n\r\n            storageRef.put(filePhoto).on('state_changed', (snap) => {\r\n                let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n                setProgress(percentage);\r\n            }, (err) => {\r\n                setError(err);\r\n            }, async () => {\r\n                const url = await storageRef.getDownloadURL();\r\n                //     // const createdAt = timestamp();\r\n                //     // await collectionRef.add({ url, createdAt });\r\n                setUrl(url);\r\n            });\r\n            console.log(\"changes made\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // references\r\n        console.log(\"use storeage called \")\r\n        //   console.log(\"use  \",filePhoto)\r\n\r\n\r\n    }, [submit]);\r\n    console.log(progress, url);\r\n    return { progress, url, error };\r\n\r\n}\r\n\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}