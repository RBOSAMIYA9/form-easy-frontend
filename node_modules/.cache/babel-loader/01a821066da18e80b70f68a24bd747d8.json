{"ast":null,"code":"import { projectStorage, projectFirestore, timeStamp } from '../firebase';\n\nconst uploadData = aadharData => {\n  console.log(\"uploding aadhar data\");\n  const collectionRef = projectFirestore.collection('adharCardData'); // var ref = collectionRef.add({ ...aadharData, \"createdAt\": timeStamp() }).then((ref) => {\n  //     console.log(\"Added doc: \", ref);\n  //     // Added doc with ID:  ZzhIgLqELaoE3eSsOazu\n  //     return ref.id;\n  // });\n};\n\nconst uploadPhoto = (image, refId) => {\n  if (image) {\n    // filePhoto.name =\"abcxyz\"\n    const storageRef = projectStorage.ref(image.name);\n    const collectionRef = projectFirestore.collection('adharCardData');\n    storageRef.put(image).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100; // setProgress(percentage);\n      // console.log(\"percentage\");\n    }, err => {\n      console.log(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL(); // const createdAt = timeStamp();\n      // await collectionRef.add({ url, createdAt });\n      //find by id and update url\n\n      await collectionRef.doc(refId).update({\n        \"photoUrl\": url\n      });\n      console.log(\"data updated to firebase\"); // setUrl(url);\n    });\n    console.log(\"image uploaded made\");\n  }\n};\n\nexport { uploadData, uploadPhoto };","map":{"version":3,"sources":["G:/naiti/react/formEasy/form-easy-frontend/src/firebase/addData.js"],"names":["projectStorage","projectFirestore","timeStamp","uploadData","aadharData","console","log","collectionRef","collection","uploadPhoto","image","refId","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","url","getDownloadURL","doc","update"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,QAA4D,aAA5D;;AAEA,MAAMC,UAAU,GAAIC,UAAD,IAAgB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,QAAMC,aAAa,GAAGN,gBAAgB,CAACO,UAAjB,CAA4B,eAA5B,CAAtB,CAF+B,CAG/B;AACA;AACA;AACA;AACA;AACH,CARD;;AAYA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClC,MAAID,KAAJ,EAAW;AACP;AACA,UAAME,UAAU,GAAGZ,cAAc,CAACa,GAAf,CAAmBH,KAAK,CAACI,IAAzB,CAAnB;AACA,UAAMP,aAAa,GAAGN,gBAAgB,CAACO,UAAjB,CAA4B,eAA5B,CAAtB;AAEAI,IAAAA,UAAU,CAACG,GAAX,CAAeL,KAAf,EAAsBM,EAAtB,CAAyB,eAAzB,EAA2CC,IAAD,IAAU;AAChD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D,CADgD,CAEhD;AACA;AACH,KAJD,EAIIC,GAAD,IAAS;AACRhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACH,KAND,EAMG,YAAY;AACX,YAAMC,GAAG,GAAG,MAAMV,UAAU,CAACW,cAAX,EAAlB,CADW,CAEX;AACA;AAEA;;AACA,YAAMhB,aAAa,CAACiB,GAAd,CAAkBb,KAAlB,EAAyBc,MAAzB,CAAgC;AAClC,oBAAYH;AADsB,OAAhC,CAAN;AAGAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EATW,CAUX;AAEH,KAlBD;AAmBAD,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ,CA3BD;;AA6BA,SAASH,UAAT,EAAqBM,WAArB","sourcesContent":["import { projectStorage, projectFirestore, timeStamp } from '../firebase';\r\n\r\nconst uploadData = (aadharData) => {\r\n    console.log(\"uploding aadhar data\");\r\n    const collectionRef = projectFirestore.collection('adharCardData');\r\n    // var ref = collectionRef.add({ ...aadharData, \"createdAt\": timeStamp() }).then((ref) => {\r\n    //     console.log(\"Added doc: \", ref);\r\n    //     // Added doc with ID:  ZzhIgLqELaoE3eSsOazu\r\n    //     return ref.id;\r\n    // });\r\n}\r\n\r\n\r\n\r\nconst uploadPhoto = (image, refId) => {\r\n    if (image) {\r\n        // filePhoto.name =\"abcxyz\"\r\n        const storageRef = projectStorage.ref(image.name);\r\n        const collectionRef = projectFirestore.collection('adharCardData');\r\n\r\n        storageRef.put(image).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            // setProgress(percentage);\r\n            // console.log(\"percentage\");\r\n        }, (err) => {\r\n            console.log(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            // const createdAt = timeStamp();\r\n            // await collectionRef.add({ url, createdAt });\r\n\r\n            //find by id and update url\r\n            await collectionRef.doc(refId).update({\r\n                \"photoUrl\": url\r\n            });\r\n            console.log(\"data updated to firebase\");\r\n            // setUrl(url);\r\n\r\n        });\r\n        console.log(\"image uploaded made\");\r\n    }\r\n}\r\n\r\nexport { uploadData, uploadPhoto };"]},"metadata":{},"sourceType":"module"}