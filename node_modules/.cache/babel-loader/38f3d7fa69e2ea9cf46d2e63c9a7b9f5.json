{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timeStamp } from '../firebase';\n\nconst useStorage = ({\n  filePhoto,\n  fileSign,\n  fileIdProof,\n  submit,\n  aadharData\n}) => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  console.log(\"form values in usestoreage \", aadharData);\n\n  const uploadPhoto = image => {\n    if (image) {\n      // filePhoto.name =\"abcxyz\"\n      const storageRef = projectStorage.ref(image.name);\n      storageRef.put(image).on('state_changed', snap => {\n        let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n        setProgress(percentage);\n        console.log(\"percentage\");\n      }, err => {\n        setError(err);\n      }, async () => {\n        const url = await storageRef.getDownloadURL(); // const createdAt = timeStamp();\n        // await collectionRef.add({ url, createdAt });\n\n        console.log(\"data uploaded to firebase\");\n        setUrl(url);\n      });\n      console.log(\"image uploaded made\");\n    }\n  };\n\n  const uploadData = aadharData => {\n    console.log(\"uploding aadhar data\");\n    const collectionRef = projectFirestore.collection('adharCardData');\n    collectionRef.add(aadharData).then(ref => {\n      console.log(\"Added doc: \", ref); // Added doc with ID:  ZzhIgLqELaoE3eSsOazu\n    });\n  };\n\n  useEffect(() => {\n    // references\n    console.log(\"use storeage called \"); // console.log(\"aadharData\",aadharData);\n\n    if (aadharData) {\n      uploadData(aadharData);\n      uploadPhoto(filePhoto);\n      uploadPhoto(fileSign);\n      uploadPhoto(fileIdProof);\n    } //   console.log(\"use  \",filePhoto)\n\n  }, [submit]);\n  console.log(progress, url);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["G:/naiti/react/formEasy/form-easy-frontend/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","timeStamp","useStorage","filePhoto","fileSign","fileIdProof","submit","aadharData","progress","setProgress","error","setError","url","setUrl","console","log","uploadPhoto","image","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","uploadData","collectionRef","collection","add","then"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,QAA4D,aAA5D;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,WAAtB;AAAmCC,EAAAA,MAAnC;AAA2CC,EAAAA;AAA3C,CAAD,KAA4D;AAAA;;AAC3E,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,IAAD,CAA9B;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CR,UAA3C;;AACA,QAAMS,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAIA,KAAJ,EAAW;AACP;AACA,YAAMC,UAAU,GAAGnB,cAAc,CAACoB,GAAf,CAAmBF,KAAK,CAACG,IAAzB,CAAnB;AAGAF,MAAAA,UAAU,CAACG,GAAX,CAAeJ,KAAf,EAAsBK,EAAtB,CAAyB,eAAzB,EAA2CC,IAAD,IAAU;AAChD,YAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAjB,QAAAA,WAAW,CAACe,UAAD,CAAX;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,OAJD,EAIIY,GAAD,IAAS;AACRhB,QAAAA,QAAQ,CAACgB,GAAD,CAAR;AACH,OAND,EAMG,YAAY;AACX,cAAMf,GAAG,GAAG,MAAMM,UAAU,CAACU,cAAX,EAAlB,CADW,CAEX;AACA;;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAF,QAAAA,MAAM,CAACD,GAAD,CAAN;AAEH,OAbD;AAcAE,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ,GAtBD;;AAwBA,QAAMc,UAAU,GAAItB,UAAD,IAAe;AAC9BO,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMe,aAAa,GAAG9B,gBAAgB,CAAC+B,UAAjB,CAA4B,eAA5B,CAAtB;AACAD,IAAAA,aAAa,CAACE,GAAd,CAAkBzB,UAAlB,EACG0B,IADH,CACSd,GAAD,IAAS;AACbL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,GAA3B,EADa,CAEb;AACD,KAJH;AAKH,GARD;;AAUArB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAFY,CAGZ;;AACA,QAAIR,UAAJ,EAAgB;AACZsB,MAAAA,UAAU,CAACtB,UAAD,CAAV;AACAS,MAAAA,WAAW,CAACb,SAAD,CAAX;AACAa,MAAAA,WAAW,CAACZ,QAAD,CAAX;AACAY,MAAAA,WAAW,CAACX,WAAD,CAAX;AACH,KATW,CAUZ;;AAGH,GAbQ,EAaN,CAACC,MAAD,CAbM,CAAT;AAcAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBI,GAAtB;AACA,SAAO;AAAEJ,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AAEH,CAxDD;;GAAMR,U;;AA2DN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timeStamp } from '../firebase';\r\n\r\nconst useStorage = ({filePhoto, fileSign, fileIdProof, submit, aadharData}) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n    console.log(\"form values in usestoreage \", aadharData);\r\n    const uploadPhoto = (image) => {\r\n        if (image) {\r\n            // filePhoto.name =\"abcxyz\"\r\n            const storageRef = projectStorage.ref(image.name);\r\n            \r\n\r\n            storageRef.put(image).on('state_changed', (snap) => {\r\n                let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n                setProgress(percentage);\r\n                console.log(\"percentage\");\r\n            }, (err) => {\r\n                setError(err);\r\n            }, async () => {\r\n                const url = await storageRef.getDownloadURL();\r\n                // const createdAt = timeStamp();\r\n                // await collectionRef.add({ url, createdAt });\r\n                console.log(\"data uploaded to firebase\");\r\n                setUrl(url);\r\n                \r\n            });\r\n            console.log(\"image uploaded made\");\r\n        }\r\n    }\r\n\r\n    const uploadData = (aadharData) =>{\r\n        console.log(\"uploding aadhar data\");\r\n        const collectionRef = projectFirestore.collection('adharCardData');\r\n        collectionRef.add(aadharData)\r\n          .then((ref) => {\r\n            console.log(\"Added doc: \", ref);\r\n            // Added doc with ID:  ZzhIgLqELaoE3eSsOazu\r\n          });\r\n    }\r\n\r\n    useEffect(() => {\r\n        // references\r\n        console.log(\"use storeage called \");\r\n        // console.log(\"aadharData\",aadharData);\r\n        if (aadharData) {\r\n            uploadData(aadharData);\r\n            uploadPhoto(filePhoto);\r\n            uploadPhoto(fileSign);\r\n            uploadPhoto(fileIdProof);\r\n        }\r\n        //   console.log(\"use  \",filePhoto)\r\n       \r\n\r\n    }, [submit]);\r\n    console.log(progress, url);\r\n    return { progress, url, error };\r\n\r\n}\r\n\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}