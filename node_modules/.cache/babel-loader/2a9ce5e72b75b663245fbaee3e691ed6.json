{"ast":null,"code":"import { projectStorage, projectFirestore, timeStamp } from '../firebase';\n\nconst uploadData = aadharData => {\n  console.log(\"uploding aadhar data\");\n  return new Promise((resolve, reject) => {\n    const collectionRef = projectFirestore.collection('adharCardData');\n    var ref = collectionRef.add({ ...aadharData,\n      \"createdAt\": timeStamp()\n    });\n    ref.then(ref => {\n      console.log(\"ref:\", ref);\n      resolve(ref);\n    });\n  }); // .then((ref) => {\n  //     console.log(\"Added doc: \", ref);\n  //     // Added doc with ID:  ZzhIgLqELaoE3eSsOazu\n  //     return ref.id;\n  // });\n};\n\nconst uploadPhoto = (image, refId, fileType) => {\n  if (image) {\n    // filePhoto.name =\"abcxyz\"\n    const storageRef = projectStorage.ref(image.name);\n    const collectionRef = projectFirestore.collection('adharCardData');\n    storageRef.put(image).on('state_changed', snap => {// let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      // setProgress(percentage);\n      // console.log(\"percentage\");\n    }, err => {\n      console.log(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL(); // const createdAt = timeStamp();\n      // await collectionRef.add({ url, createdAt });\n      //find by id and update url\n\n      await collectionRef.doc(refId).update({\n        \"photoUrl\": url\n      });\n      console.log(\"data updated to firebase\"); // setUrl(url);\n    });\n    console.log(\"image uploaded made\");\n  }\n};\n\nexport { uploadData, uploadPhoto };","map":{"version":3,"sources":["G:/naiti/react/formEasy/form-easy-frontend/src/firebase/addData.js"],"names":["projectStorage","projectFirestore","timeStamp","uploadData","aadharData","console","log","Promise","resolve","reject","collectionRef","collection","ref","add","then","uploadPhoto","image","refId","fileType","storageRef","name","put","on","snap","err","url","getDownloadURL","doc","update"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,QAA4D,aAA5D;;AAEA,MAAMC,UAAU,GAAIC,UAAD,IAAgB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACjC,UAAMC,aAAa,GAAGT,gBAAgB,CAACU,UAAjB,CAA4B,eAA5B,CAAtB;AAEA,QAAIC,GAAG,GAAGF,aAAa,CAACG,GAAd,CAAkB,EAAE,GAAGT,UAAL;AAAiB,mBAAaF,SAAS;AAAvC,KAAlB,CAAV;AACAU,IAAAA,GAAG,CAACE,IAAJ,CAAUF,GAAD,IAAO;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBM,GAAnB;AACAJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAKH,GATM,CAAP,CAH+B,CAc/B;AACA;AACA;AACA;AACA;AACH,CAnBD;;AAuBA,MAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAcC,QAAd,KAA2B;AAC3C,MAAIF,KAAJ,EAAW;AACP;AACA,UAAMG,UAAU,GAAGnB,cAAc,CAACY,GAAf,CAAmBI,KAAK,CAACI,IAAzB,CAAnB;AACA,UAAMV,aAAa,GAAGT,gBAAgB,CAACU,UAAjB,CAA4B,eAA5B,CAAtB;AAEAQ,IAAAA,UAAU,CAACE,GAAX,CAAeL,KAAf,EAAsBM,EAAtB,CAAyB,eAAzB,EAA2CC,IAAD,IAAU,CAChD;AACA;AACA;AACH,KAJD,EAIIC,GAAD,IAAS;AACRnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,KAND,EAMG,YAAY;AACX,YAAMC,GAAG,GAAG,MAAMN,UAAU,CAACO,cAAX,EAAlB,CADW,CAEX;AACA;AAEA;;AAEA,YAAMhB,aAAa,CAACiB,GAAd,CAAkBV,KAAlB,EAAyBW,MAAzB,CAAgC;AAClC,oBAAYH;AADsB,OAAhC,CAAN;AAGApB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAVW,CAWX;AAEH,KAnBD;AAoBAD,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ,CA5BD;;AA8BA,SAASH,UAAT,EAAqBY,WAArB","sourcesContent":["import { projectStorage, projectFirestore, timeStamp } from '../firebase';\r\n\r\nconst uploadData = (aadharData) => {\r\n    console.log(\"uploding aadhar data\");\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        const collectionRef = projectFirestore.collection('adharCardData');\r\n\r\n        var ref = collectionRef.add({ ...aadharData, \"createdAt\": timeStamp() })\r\n        ref.then((ref)=>{\r\n            console.log(\"ref:\",ref);\r\n            resolve(ref)\r\n        })\r\n\r\n    })\r\n\r\n    // .then((ref) => {\r\n    //     console.log(\"Added doc: \", ref);\r\n    //     // Added doc with ID:  ZzhIgLqELaoE3eSsOazu\r\n    //     return ref.id;\r\n    // });\r\n}\r\n\r\n\r\n\r\nconst uploadPhoto = (image, refId,fileType) => {\r\n    if (image) {\r\n        // filePhoto.name =\"abcxyz\"\r\n        const storageRef = projectStorage.ref(image.name);\r\n        const collectionRef = projectFirestore.collection('adharCardData');\r\n\r\n        storageRef.put(image).on('state_changed', (snap) => {\r\n            // let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            // setProgress(percentage);\r\n            // console.log(\"percentage\");\r\n        }, (err) => {\r\n            console.log(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            // const createdAt = timeStamp();\r\n            // await collectionRef.add({ url, createdAt });\r\n\r\n            //find by id and update url\r\n            \r\n            await collectionRef.doc(refId).update({\r\n                \"photoUrl\": url\r\n            });\r\n            console.log(\"data updated to firebase\");\r\n            // setUrl(url);\r\n\r\n        });\r\n        console.log(\"image uploaded made\");\r\n    }\r\n}\r\n\r\nexport { uploadData, uploadPhoto };"]},"metadata":{},"sourceType":"module"}