{"ast":null,"code":"import { projectStorage, projectFirestore, timeStamp } from '../firebase';\n\nconst uploadData = async data => {\n  console.log(\"uploding aadhar data\");\n  return new Promise((resolve, reject) => {\n    const collectionRef = projectFirestore.collection('adharCardData');\n    var ref = collectionRef.add({ ...data,\n      \"createdAt\": timeStamp()\n    });\n    ref.then(ref => {\n      console.log(\"ref:\", ref);\n      resolve(ref);\n    });\n  });\n};\n\nconst uploadPhoto = async (image, refId, fileType) => {\n  return new Promise((resolve, reject) => {\n    if (image) {\n      // filePhoto.name =\"abcxyz\"\n      const storageRef = projectStorage.ref(image.name);\n      const collectionRef = projectFirestore.collection('adharCardData');\n      storageRef.put(image).on('state_changed', snap => {// let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        // setProgress(percentage);\n        // console.log(\"percentage\");\n      }, err => {\n        console.log(\"err: \", err);\n      }, async () => {\n        const url = await storageRef.getDownloadURL(); // const createdAt = timeStamp();\n        // await collectionRef.add({ url, createdAt });\n        //find by id and update url\n\n        await collectionRef.doc(refId).update({\n          [fileType]: url\n        }).then(() => {\n          console.log(fileType, \" uploaded to firebase\");\n          resolv(\"uploaded\");\n        }); // setUrl(url);\n      }); // console.log(\"image uploaded made\");\n    }\n  });\n};\n\nexport { uploadData, uploadPhoto };","map":{"version":3,"sources":["G:/naiti/react/formEasy/form-easy-frontend/src/firebase/addData.js"],"names":["projectStorage","projectFirestore","timeStamp","uploadData","data","console","log","Promise","resolve","reject","collectionRef","collection","ref","add","then","uploadPhoto","image","refId","fileType","storageRef","name","put","on","snap","err","url","getDownloadURL","doc","update","resolv"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,QAA4D,aAA5D;;AAEA,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAGhC,UAAMC,aAAa,GAAGT,gBAAgB,CAACU,UAAjB,CAA4B,eAA5B,CAAtB;AACA,QAAIC,GAAG,GAAGF,aAAa,CAACG,GAAd,CAAkB,EAAE,GAAGT,IAAL;AAAW,mBAAaF,SAAS;AAAjC,KAAlB,CAAV;AACAU,IAAAA,GAAG,CAACE,IAAJ,CAAUF,GAAD,IAAS;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,GAApB;AACAJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAKP,GAVM,CAAP;AAaH,CAhBD;;AAoBA,MAAMG,WAAW,GAAG,OAAOC,KAAP,EAAcC,KAAd,EAAqBC,QAArB,KAAkC;AAClD,SAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIO,KAAJ,EAAW;AACP;AACA,YAAMG,UAAU,GAAGnB,cAAc,CAACY,GAAf,CAAmBI,KAAK,CAACI,IAAzB,CAAnB;AACA,YAAMV,aAAa,GAAGT,gBAAgB,CAACU,UAAjB,CAA4B,eAA5B,CAAtB;AAEAQ,MAAAA,UAAU,CAACE,GAAX,CAAeL,KAAf,EAAsBM,EAAtB,CAAyB,eAAzB,EAA2CC,IAAD,IAAU,CAChD;AACA;AACA;AACH,OAJD,EAIIC,GAAD,IAAS;AACRnB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBkB,GAArB;AACH,OAND,EAMG,YAAY;AACX,cAAMC,GAAG,GAAG,MAAMN,UAAU,CAACO,cAAX,EAAlB,CADW,CAEX;AACA;AAEA;;AAEA,cAAMhB,aAAa,CAACiB,GAAd,CAAkBV,KAAlB,EAAyBW,MAAzB,CAAgC;AAClC,WAACV,QAAD,GAAYO;AADsB,SAAhC,EAEHX,IAFG,CAEE,MAAI;AACRT,UAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ,EAAsB,uBAAtB;AACAW,UAAAA,MAAM,CAAC,UAAD,CAAN;AACH,SALK,CAAN,CAPW,CAgBX;AAGH,OAzBD,EALO,CA+BP;AACH;AACJ,GAlCM,CAAP;AAmCH,CApCD;;AAsCA,SAAS1B,UAAT,EAAqBY,WAArB","sourcesContent":["import { projectStorage, projectFirestore, timeStamp } from '../firebase';\r\n\r\nconst uploadData = async (data) => {\r\n    console.log(\"uploding aadhar data\");\r\n\r\n    return new Promise((resolve, reject) => {\r\n       \r\n            \r\n            const collectionRef = projectFirestore.collection('adharCardData');\r\n            var ref = collectionRef.add({ ...data, \"createdAt\": timeStamp() })\r\n            ref.then((ref) => {\r\n                console.log(\"ref:\", ref);\r\n                resolve(ref)\r\n            })\r\n\r\n    })\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nconst uploadPhoto = async (image, refId, fileType) => {\r\n    return new Promise((resolve, reject) => {\r\n        if (image) {\r\n            // filePhoto.name =\"abcxyz\"\r\n            const storageRef = projectStorage.ref(image.name);\r\n            const collectionRef = projectFirestore.collection('adharCardData');\r\n\r\n            storageRef.put(image).on('state_changed', (snap) => {\r\n                // let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n                // setProgress(percentage);\r\n                // console.log(\"percentage\");\r\n            }, (err) => {\r\n                console.log(\"err: \", err);\r\n            }, async () => {\r\n                const url = await storageRef.getDownloadURL();\r\n                // const createdAt = timeStamp();\r\n                // await collectionRef.add({ url, createdAt });\r\n\r\n                //find by id and update url\r\n\r\n                await collectionRef.doc(refId).update({\r\n                    [fileType]: url\r\n                }).then(()=>{\r\n                    console.log(fileType, \" uploaded to firebase\");\r\n                    resolv(\"uploaded\")\r\n                }\r\n                    \r\n                );\r\n                \r\n                // setUrl(url);\r\n                \r\n\r\n            });\r\n            // console.log(\"image uploaded made\");\r\n        }\r\n    })\r\n}\r\n\r\nexport { uploadData, uploadPhoto };"]},"metadata":{},"sourceType":"module"}