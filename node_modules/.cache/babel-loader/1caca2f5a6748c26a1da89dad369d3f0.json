{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectStorage } from '../firebase';\n\nconst useStorage = (filePhoto, fileSign, fileIdProof) => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    // references\n    console.log(\"use storeage called \");\n    console.log(\"use storeage called \"); //   const storageRef = projectStorage.ref(filePhoto.name);\n    // //   const collectionRef = projectFirestore.collection('images');\n    //   storageRef.put(filePhoto).on('state_changed', (snap) => {\n    //     let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n    //     setProgress(percentage);\n    //   }, (err) => {\n    //     setError(err);\n    //   }, async () => {\n    //     const url = await storageRef.getDownloadURL();\n    //     // const createdAt = timestamp();\n    //     // await collectionRef.add({ url, createdAt });\n    //     setUrl(url);\n    //   });\n    // console.log(\"changes made\");\n  }, [filePhoto, fileSign, fileIdProof]);\n  console.log(progress, url);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["G:/naiti/react/formEasy/form-easy-frontend/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","useStorage","filePhoto","fileSign","fileIdProof","progress","setProgress","error","setError","url","setUrl","console","log"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAAQC,cAAR,QAA6B,aAA7B;;AAEA,MAAMC,UAAU,GAAG,CAACC,SAAD,EAAWC,QAAX,EAAoBC,WAApB,KAAoC;AAAA;;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAHc,CAIhB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,GAnBQ,EAmBN,CAACV,SAAD,EAAWC,QAAX,EAAoBC,WAApB,CAnBM,CAAT;AAoBAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAqBI,GAArB;AACA,SAAO;AAAEJ,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AAEH,CA5BD;;GAAMN,U;;AA+BN,eAAeA,UAAf","sourcesContent":["import {useState,useEffect} from 'react';\r\nimport {projectStorage} from '../firebase';\r\n\r\nconst useStorage = (filePhoto,fileSign,fileIdProof) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      // references\r\n      console.log(\"use storeage called \")\r\n      console.log(\"use storeage called \")\r\n    //   const storageRef = projectStorage.ref(filePhoto.name);\r\n    // //   const collectionRef = projectFirestore.collection('images');\r\n      \r\n    //   storageRef.put(filePhoto).on('state_changed', (snap) => {\r\n    //     let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n    //     setProgress(percentage);\r\n    //   }, (err) => {\r\n    //     setError(err);\r\n    //   }, async () => {\r\n    //     const url = await storageRef.getDownloadURL();\r\n    //     // const createdAt = timestamp();\r\n    //     // await collectionRef.add({ url, createdAt });\r\n    //     setUrl(url);\r\n    //   });\r\n    // console.log(\"changes made\");\r\n    }, [filePhoto,fileSign,fileIdProof]);\r\n    console.log(progress,url);\r\n    return { progress, url, error };\r\n    \r\n}\r\n\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}